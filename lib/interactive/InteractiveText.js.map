{"version":3,"sources":["../../../src/lib/interactive/InteractiveText.js"],"names":["InteractiveText","props","handleDraw","bind","handleDrag","handleDouble","handleDoubleClick","handleDragComplete","terminate","saveNodeType","getSelectionState","nodes","state","index","position","setState","override","moreProps","newOverride","currentText","textList","newTextList","map","each","idx","selected","onDragComplete","xyValue","current","start","end","e","onDoubleClick","enabled","mouseXY","mouseY","yScale","chartConfig","xAccessor","currentItem","invert","defaultText","onChoosePosition","newText","hoverText","defaultHoverText","defaultProps","noop","getMouseCanvas","Component","propTypes","PropTypes","func","isRequired","onSelect","shape","bgFill","string","bgOpacity","number","bgStrokeWidth","bgStroke","textFill","fontFamily","fontWeight","fontStyle","fontSize","text","object","array","bool","HoverTextNearMouse","enable","bgHeight","bgWidth","selectedText","contextTypes","subscribe","unsubscribe","generateSubscriptionId","chartId","oneOfType"],"mappings":"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","file":"InteractiveText.js","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { isDefined, noop } from \"../utils\";\n\nimport {\n\tgetValueFromOverride,\n\tterminate,\n\tsaveNodeType,\n\tisHoverForInteractiveType,\n} from \"./utils\";\nimport EachText from \"./wrapper/EachText\";\nimport HoverTextNearMouse from \"./components/HoverTextNearMouse\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getMouseCanvas } from \"../GenericComponent\";\n\nclass InteractiveText extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleDraw = this.handleDraw.bind(this);\n\t\tthis.handleDrag = this.handleDrag.bind(this);\n\t\tthis.handleDouble = this.handleDouble.bind(this);\n\t\tthis.handleDoubleClick = this.handleDoubleClick.bind(this);\n\t\tthis.handleDragComplete = this.handleDragComplete.bind(this);\n\t\tthis.terminate = terminate.bind(this);\n\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.getSelectionState = isHoverForInteractiveType(\"textList\")\n\t\t\t.bind(this);\n\n\t\tthis.nodes = [];\n\t\tthis.state = {};\n\t}\n\thandleDrag(index, position) {\n\t\tthis.setState({\n\t\t\toverride: {\n\t\t\t\tindex,\n\t\t\t\tposition,\n\t\t\t}\n\t\t});\n\t}\n\thandleDragComplete(moreProps) {\n\t\tconst { override } = this.state;\n\t\tconst newOverride = override && override.position || null;\n\n\t\tthis.state = {\n\t\t\t...this.state,\n\t\t\tcurrentText: {\n\t\t\t\t...this.state.currentText,\n\t\t\t\tposition: newOverride\n\t\t\t}\n\t\t};\n\n\t\tif (isDefined(override)) {\n\t\t\tconst { textList } = this.props;\n\t\t\tconst newTextList = textList\n\t\t\t\t.map((each, idx) => {\n\t\t\t\t\tconst selected = (idx === override.index);\n\t\t\t\t\treturn selected\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t...each,\n\t\t\t\t\t\t\tposition: override.position,\n\t\t\t\t\t\t\tselected,\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t...each,\n\t\t\t\t\t\t\tselected\n\t\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\tcurrentText: this.state.currentText\n\t\t\t}, () => {\n\t\t\t\tthis.props.onDragComplete(newTextList, moreProps);\n\t\t\t});\n\n\t\t\tthis.state = {\n\t\t\t\t...this.state,\n\t\t\t\toverride: null\n\t\t\t};\n\t\t}\n\t}\n\thandleDrawLine(xyValue) {\n\t\tconst { current } = this.state;\n\n\t\tif (isDefined(current) && isDefined(current.start)) {\n\t\t\tthis.setState({\n\t\t\t\tcurrent: {\n\t\t\t\t\tstart: current.start,\n\t\t\t\t\tend: xyValue,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\thandleDoubleClick(moreProps, e) {\n\t\tconst { onDoubleClick } = this.props;\n\t\tconst { currentText } = this.state;\n\n\t\tif (onDoubleClick && currentText !== null) {\n\t\t\tonDoubleClick(currentText, moreProps, e);\n\t\t}\n\t}\n\n\thandleDouble(props) {\n\t\tthis.setState({\n\t\t\tcurrentText: props\n\t\t});\n\t}\n\thandleDraw(moreProps, e) {\n\t\tconst { enabled } = this.props;\n\t\tconst {\n\t\t\tmouseXY: [, mouseY],\n\t\t\tchartConfig: { yScale },\n\t\t\txAccessor,\n\t\t\tcurrentItem,\n\t\t} = moreProps;\n\n\t\tconst xyValue = [xAccessor(currentItem), yScale.invert(mouseY)];\n\t\tif (enabled) {\n\n\t\t\tconst { defaultText, onChoosePosition } = this.props;\n\n\t\t\tconst newText = {\n\t\t\t\t...defaultText,\n\t\t\t\tposition: xyValue,\n\t\t\t};\n\t\t\t// onChoosePosition(newText, moreProps, e);\n\t\t}\n\t}\n\trender() {\n\t\tconst { textList, defaultText, hoverText } = this.props;\n\t\tconst { override } = this.state;\n\n\t\treturn <g>\n\t\t\t{textList.map((each, idx) => {\n\t\t\t\tconst defaultHoverText = InteractiveText.defaultProps.hoverText;\n\t\t\t\tconst props = {\n\t\t\t\t\t...defaultText,\n\t\t\t\t\t...each,\n\t\t\t\t\thoverText: {\n\t\t\t\t\t\t...defaultHoverText,\n\t\t\t\t\t\t...hoverText,\n\t\t\t\t\t\t...(each.hoverText || {})\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\treturn <EachText key={idx}\n\t\t\t\t\tref={this.saveNodeType(idx)}\n\t\t\t\t\tindex={idx}\n\t\t\t\t\t{...props}\n\t\t\t\t\tselected={each.selected}\n\t\t\t\t\tposition={getValueFromOverride(override, idx, \"position\", each.position)}\n\n\t\t\t\t\tonDrag={this.handleDrag}\n\t\t\t\t\tonDoubleClick={this.handleDouble}\n\t\t\t\t\tonDragComplete={this.handleDragComplete}\n\t\t\t\t\tedgeInteractiveCursor=\"react-stockcharts-move-cursor\"\n\t\t\t\t/>;\n\t\t\t})}\n\t\t\t<GenericChartComponent\n\t\t\t\tonClick={this.handleDraw}\n\t\t\t\tonDoubleClick={this.handleDoubleClick}\n\n\t\t\t\tsvgDraw={noop}\n\t\t\t\tcanvasDraw={noop}\n\t\t\t\tcanvasToDraw={getMouseCanvas}\n\n\t\t\t\tdrawOn={[\"mousemove\", \"pan\"]}\n\t\t\t/>;\n\t\t</g>;\n\t}\n}\n\nInteractiveText.propTypes = {\n\tonChoosePosition: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func,\n\tonDoubleClick: PropTypes.func,\n\n\tdefaultText: PropTypes.shape({\n\t\tbgFill: PropTypes.string.isRequired,\n\t\tbgOpacity: PropTypes.number.isRequired,\n\t\tbgStrokeWidth: PropTypes.number,\n\t\tbgStroke: PropTypes.string,\n\t\ttextFill: PropTypes.string.isRequired,\n\t\tfontFamily: PropTypes.string.isRequired,\n\t\tfontWeight: PropTypes.string.isRequired,\n\t\tfontStyle: PropTypes.string.isRequired,\n\t\tfontSize: PropTypes.number.isRequired,\n\t\ttext: PropTypes.string.isRequired,\n\t}).isRequired,\n\n\thoverText: PropTypes.object.isRequired,\n\ttextList: PropTypes.array.isRequired,\n\tenabled: PropTypes.bool.isRequired,\n};\n\nInteractiveText.defaultProps = {\n\tonChoosePosition: noop,\n\tonDragComplete: noop,\n\tonSelect: noop,\n\tonDoubleClick: noop,\n\n\tdefaultText: {\n\t\tbgFill: \"#D3D3D3\",\n\t\tbgOpacity: 1,\n\t\tbgStrokeWidth: 1,\n\t\ttextFill: \"#F10040\",\n\t\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n\t\tfontSize: 12,\n\t\tfontStyle: \"normal\",\n\t\tfontWeight: \"normal\",\n\t\ttext: \"Lorem ipsum...\"\n\t},\n\thoverText: {\n\t\t...HoverTextNearMouse.defaultProps,\n\t\tenable: true,\n\t\tbgHeight: \"auto\",\n\t\tbgWidth: \"auto\",\n\t\ttext: \"Click to select object\",\n\t\tselectedText: \"\",\n\t},\n\ttextList: [],\n};\n\nInteractiveText.contextTypes = {\n\tsubscribe: PropTypes.func.isRequired,\n\tunsubscribe: PropTypes.func.isRequired,\n\tgenerateSubscriptionId: PropTypes.func.isRequired,\n\tchartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n};\n\nexport default InteractiveText;\n"]}