{"version":3,"sources":["../../../src/lib/interactive/LinePrecent.js"],"names":["LinePrecent","props","handleStart","bind","handleEnd","handleDrawLine","handleDragLine","handleDragLineComplete","terminate","saveNodeType","getSelectionState","getHoverInteractive","state","percent","nodes","index","newXYValue","setState","override","moreProps","percents","newPercents","map","each","idx","start","x1Value","y1Value","end","x2Value","y2Value","selected","firstItem","lastItem","onComplete","xyValue","e","current","percentFormat","mouseMoved","currentItem","onStart","appearance","type","d","hovering","precentlLine","isHover","enabled","snap","shouldDisableSnap","snapTo","currentPositionRadius","currentPositionStroke","currentPositionstrokeOpacity","currentPositionStrokeWidth","hoverText","hoverTextWithDefault","defaultProps","tempLine","stroke","strokeWidth","strokeOpacity","fontSize","fontFill","fontFamily","edgeStrokeWidth","eachAppearance","label","strokeDasharray","edgeStroke","edgeFill","r","Component","propTypes","PropTypes","bool","isRequired","func","onSelect","onDoubleClick","string","number","object","array","shape","oneOf","strokeDashTypes","noop","button","shiftKey","HoverTextNearMouse","enable","bgHeight","bgWidth","text","selectedText"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AAEA;;AAEA;;AAOA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IACMA,W;;;AACL,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACZA,KADY;;AAGlB,QAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AACA,QAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,OAAjB;AACA,QAAKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,OAAtB;AACA,QAAKG,cAAL,GAAsB,MAAKA,cAAL,CAAoBH,IAApB,OAAtB;AACA,QAAKI,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BJ,IAA5B,OAA9B;;AAEA,QAAKK,SAAL,GAAiBA,kBAAUL,IAAV,OAAjB;AACA,QAAKM,YAAL,GAAoBA,qBAAaN,IAAb,OAApB;;AAEA,QAAKO,iBAAL,GAAyB,uCAA0B,UAA1B,EAAsCP,IAAtC,OAAzB;AAGA,QAAKQ,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBR,IAAzB,OAA3B;;AAEA,QAAKS,KAAL,GAAa;AACZC,YAAS;AADG,GAAb;AAGA,QAAKC,KAAL,GAAa,EAAb;AApBkB;AAqBlB;;;;iCACcC,K,EAAOC,U,EAAY;AACjC,QAAKC,QAAL,CAAc;AACbC;AACCH;AADD,OAEIC,UAFJ;AADa,IAAd;AAMA;;;yCACsBG,S,EAAW;AAAA;;AAAA,OACzBD,QADyB,GACZ,KAAKN,KADO,CACzBM,QADyB;;AAEjC,OAAI,sBAAUA,QAAV,CAAJ,EAAyB;AAAA,QAChBE,QADgB,GACH,KAAKnB,KADF,CAChBmB,QADgB;;AAExB,QAAMC,cAAcD,SAASE,GAAT,CAAa,UAACC,IAAD,EAAOC,GAAP;AAAA,YAChCA,QAAQN,SAASH,KAAjB,gBAEKQ,IAFL;AAGEE,aAAO,CAACP,SAASQ,OAAV,EAAmBR,SAASS,OAA5B,CAHT;AAIEC,WAAK,CAACV,SAASW,OAAV,EAAmBX,SAASY,OAA5B,CAJP;AAKEC,gBAAU,IALZ;AAMEC,iBAAWd,SAASc,SANtB;AAOEC,gBAAUf,SAASe;AAPrB,uBAUKV,IAVL;AAWEQ,gBAAU;AAXZ,OADgC;AAAA,KAAb,CAApB;;AAgBA,SAAKd,QAAL,CACC;AACCC,eAAU;AADX,KADD,EAIC,YAAM;AACL,YAAKjB,KAAL,CAAWiC,UAAX,CAAsBb,WAAtB,EAAmCF,SAAnC;AACA,KANF;AAQA;AACD;;;iCACcgB,O,EAASC,C,EAAGjB,S,EAAW;AAAA,OAC7BkB,OAD6B,GACjB,KAAKzB,KADY,CAC7ByB,OAD6B;AAAA,OAE7BC,aAF6B,GAEX,KAAKrC,KAFM,CAE7BqC,aAF6B;;;AAIrC,OAAI,sBAAUD,OAAV,KAAsB,sBAAUA,QAAQZ,KAAlB,CAA1B,EAAoD;AACnD,SAAKc,UAAL,GAAkB,IAAlB;AACA,SAAKtB,QAAL,CAAc;AACboB,2BACIA,OADJ;AAECZ,aAAOY,QAAQZ,KAFhB;AAGCG,WAAKO,OAHN;AAICF,gBAAUd,UAAUqB;AAJrB;AADa,KAAd;AAQA;AACD;;;8BACWL,O,EAAShB,S,EAAWiB,C,EAAG;AAAA;;AAAA,OAC1BC,OAD0B,GACd,KAAKzB,KADS,CAC1ByB,OAD0B;;AAElC,OAAI,yBAAaA,OAAb,KAAyB,yBAAaA,QAAQZ,KAArB,CAA7B,EAA0D;AACzD,SAAKc,UAAL,GAAkB,KAAlB;;AAEA,SAAKtB,QAAL,CACC;AACCoB,2BACIA,OADJ;AAECZ,aAAOU,OAFR;AAGCP,WAAK,IAHN;AAICI,iBAAWb,UAAUqB;AAJtB;AADD,KADD,EASC,YAAM;AACL,YAAKvC,KAAL,CAAWwC,OAAX,CAAmBtB,SAAnB,EAA8BiB,CAA9B;AACA,KAXF;AAaA;AACD;;;4BACSD,O,EAAShB,S,EAAWiB,C,EAAG;AAAA;;AAAA,OACxBC,OADwB,GACZ,KAAKzB,KADO,CACxByB,OADwB;AAAA,gBAEO,KAAKpC,KAFZ;AAAA,OAExBmB,QAFwB,UAExBA,QAFwB;AAAA,OAEdsB,UAFc,UAEdA,UAFc;AAAA,OAEFC,IAFE,UAEFA,IAFE;;;AAIhC,OAAI,KAAKJ,UAAL,IAAmB,sBAAUF,OAAV,CAAnB,IAAyC,sBAAUA,QAAQZ,KAAlB,CAA7C,EAAuE;AACtE,QAAMJ,2CACFD,SAASE,GAAT,CAAa,UAACsB,CAAD;AAAA,yBAAaA,CAAb,IAAgBb,UAAU,KAA1B;AAAA,KAAb,CADE,IAEL;AACCN,YAAOY,QAAQZ,KADhB;AAECG,UAAKO,OAFN;AAGCJ,eAAU,IAHX;AAICW,2BAJD;AAKCC,eALD;AAMCX,gBAAWK,QAAQL,SANpB;AAOCC,eAAUd,UAAUqB;AAPrB,KAFK,EAAN;AAYA,SAAKvB,QAAL,CACC;AACCoB,cAAS,IADV;AAECjB,eAAUC;AAFX,KADD,EAKC,YAAM;AACL,YAAKpB,KAAL,CAAWiC,UAAX,CAAsBb,WAAtB,EAAmCF,SAAnC,EAA8CiB,CAA9C;AACA,KAPF;AASA;AACD;;;sCACmBS,Q,EAAUC,Y,EAAc;AAC3CA,gBAAaD,QAAb,GAAwBA,QAAxB;AAD2C,OAEnCE,OAFmC,GAEvB,KAAK9C,KAFkB,CAEnC8C,OAFmC;;AAG3CA,WAAQF,QAAR,EAAkBC,YAAlB;AACA;;;2BAEQ;AAAA;;AAAA,OACAJ,UADA,GACe,KAAKzC,KADpB,CACAyC,UADA;AAAA,iBAE6C,KAAKzC,KAFlD;AAAA,OAEA+C,OAFA,WAEAA,OAFA;AAAA,OAESC,IAFT,WAESA,IAFT;AAAA,OAEeC,iBAFf,WAEeA,iBAFf;AAAA,OAEkCC,MAFlC,WAEkCA,MAFlC;AAAA,iBAGiD,KAAKlD,KAHtD;AAAA,OAGAmD,qBAHA,WAGAA,qBAHA;AAAA,OAGuBC,qBAHvB,WAGuBA,qBAHvB;AAAA,iBAOJ,KAAKpD,KAPD;AAAA,OAKPqD,4BALO,WAKPA,4BALO;AAAA,OAMPC,0BANO,WAMPA,0BANO;AAAA,iBAQwB,KAAKtD,KAR7B;AAAA,OAQAuD,SARA,WAQAA,SARA;AAAA,OAQWpC,QARX,WAQWA,QARX;AAAA,gBASsB,KAAKR,KAT3B;AAAA,OASAyB,OATA,UASAA,OATA;AAAA,OASSnB,QATT,UASSA,QATT;;;AAYR,OAAMuC,oCACFzD,YAAY0D,YAAZ,CAAyBF,SADvB,EAEFA,SAFE,CAAN;;AAKA,OAAMG,WACF,sBAAUtB,OAAV,KAAsB,sBAAUA,QAAQT,GAAlB,CAAtB,GACC;AAAA;AAAA;AACC,kCAAC,yBAAD;AACC,WAAK,MADN;AAEC,kBAFD;AAGC,cAASS,QAAQZ,KAAR,CAAc,CAAd,CAHV;AAIC,cAASY,QAAQZ,KAAR,CAAc,CAAd,CAJV;AAKC,cAASY,QAAQT,GAAR,CAAY,CAAZ,CALV;AAMC,cAASS,QAAQT,GAAR,CAAY,CAAZ,CANV;AAOC,aAAQc,WAAWkB,MAPpB;AAQC,gBAAWH,oBARZ;AASC,kBAAaf,WAAWmB,WATzB;AAUC,oBAAenB,WAAWoB,aAV3B;AAWC,eAAUpB,WAAWqB,QAXtB;AAYC,eAAUrB,WAAWsB,QAZtB;AAaC,iBAAYtB,WAAWuB,UAbxB;AAcC,gBAAW5B,QAAQL,SAdpB;AAeC,eAAUK,QAAQJ,QAfnB;AAgBC,sBAAiBS,WAAWwB,eAhB7B;AAiBC,4BAAsB,+BAjBvB;AAkBC,4BAAsB;AAlBvB,OAmBK7B,OAnBL;AADD,IADD,GAwBI,IAzBR;AA0BA,UACC;AAAA;AAAA;AACEjB,aAASE,GAAT,CAAa,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC5B,SAAM2C,iBAAiB,sBAAU5C,KAAKmB,UAAf,iBACfA,UADe,EACAnB,KAAKmB,UADL,IAEpBA,UAFH;AAGA,YACC,8BAAC,yBAAD;AACC,WAAKlB,GADN;AAEC,WAAK,OAAKf,YAAL,CAAkBe,GAAlB,CAFN;AAGC,aAAOA,GAHR;AAIC,YAAK,MAJN;AAKC,aAAOD,KAAK6C,KALb,CAKoB;AALpB,QAMC,UAAU7C,KAAKQ,QANhB;AAOC,iBAAWR,KAAKS,SAPjB;AAQC,gBAAUT,KAAKU,QARhB;AASC,eAAS,kCACRf,QADQ,EAERM,GAFQ,EAGR,SAHQ,EAIRD,KAAKE,KAAL,CAAW,CAAX,CAJQ,CATV;AAeC,eAAS,kCACRP,QADQ,EAERM,GAFQ,EAGR,SAHQ,EAIRD,KAAKE,KAAL,CAAW,CAAX,CAJQ,CAfV;AAqBC,eAAS,kCACRP,QADQ,EAERM,GAFQ,EAGR,SAHQ,EAIRD,KAAKK,GAAL,CAAS,CAAT,CAJQ,CArBV;AA2BC,eAAS,kCACRV,QADQ,EAERM,GAFQ,EAGR,SAHQ,EAIRD,KAAKK,GAAL,CAAS,CAAT,CAJQ,CA3BV;AAiCC,cAAQuC,eAAeP,MAjCxB;AAkCC,mBAAaO,eAAeN,WAlC7B;AAmCC,qBAAeM,eAAeL,aAnC/B;AAoCC,uBAAiBK,eAAeE,eApCjC;AAqCC,kBAAYF,eAAeG,UArC5B;AAsCC,gBAAUH,eAAeI,QAtC1B;AAuCC,uBAAiBJ,eAAeD,eAvCjC;AAwCC,gBAAUC,eAAeJ,QAxC1B;AAyCC,gBAAUI,eAAeH,QAzC1B;AA0CC,kBAAYG,eAAeF,UA1C5B;AA2CC,SAAGE,eAAeK,CA3CnB;AA4CC,iBAAWf,oBA5CZ;AA6CC,cAAQ,OAAKnD,cA7Cd;AA8CC,sBAAgB,OAAKC,sBA9CtB;AA+CC,6BAAsB,+BA/CvB;AAgDC,6BAAsB,+BAhDvB;AAiDC,2BAAqB;AAAA,cAAY,OAAKI,mBAAL,CAAyBkC,QAAzB,EAAmCtB,IAAnC,CAAZ;AAAA;AAjDtB,OADD;AAqDA,KAzDA,CADF;AA2DEoC,YA3DF;AA4DC,kCAAC,gCAAD;AACC,cAASX,OADV;AAEC,WAAMC,IAFP;AAGC,wBAAmBC,iBAHpB;AAIC,aAAQC,MAJT;AAKC,QAAGC,qBALJ;AAMC,aAAQC,qBANT;AAOC,oBAAeC,4BAPhB;AAQC,kBAAaC,0BARd;AASC,kBAAa,KAAKrD,WATnB;AAUC,cAAS,KAAKE,SAVf;AAWC,kBAAa,KAAKC;AAXnB;AA5DD,IADD;AA4EA;;;;EA1PwBoE,gB;;AA6P1BzE,YAAY0E,SAAZ,GAAwB;AACvBzB,OAAM0B,oBAAUC,IAAV,CAAeC,UADE;AAEvB7B,UAAS2B,oBAAUC,IAAV,CAAeC,UAFD;AAGvB1B,SAAQwB,oBAAUG,IAHK;AAIvB5B,oBAAmByB,oBAAUG,IAAV,CAAeD,UAJX;;AAMvBpC,UAASkC,oBAAUG,IAAV,CAAeD,UAND;AAOvB3C,aAAYyC,oBAAUG,IAAV,CAAeD,UAPJ;AAQvBE,WAAUJ,oBAAUG,IARG;AASvBE,gBAAeL,oBAAUG,IATF;;AAWvBzB,wBAAuBsB,oBAAUM,MAXV;AAYvB1B,6BAA4BoB,oBAAUO,MAZf;AAavB5B,+BAA8BqB,oBAAUO,MAbjB;AAcvB9B,wBAAuBuB,oBAAUO,MAdV;;AAgBvB1B,YAAWmB,oBAAUQ,MAAV,CAAiBN,UAhBL;;AAkBvBzD,WAAUuD,oBAAUS,KAAV,CAAgBP,UAlBH;;AAoBvBnC,aAAYiC,oBAAUU,KAAV,CAAgB;AAC3BpB,cAAYU,oBAAUM,MAAV,CAAiBJ,UADF;AAE3Bd,YAAUY,oBAAUO,MAAV,CAAiBL,UAFA;AAG3Bb,YAAUW,oBAAUM,MAAV,CAAiBJ,UAHA;AAI3BjB,UAAQe,oBAAUM,MAAV,CAAiBJ,UAJE;AAK3Bf,iBAAea,oBAAUO,MAAV,CAAiBL,UALL;AAM3BhB,eAAac,oBAAUO,MAAV,CAAiBL,UANH;AAO3BR,mBAAiBM,oBAAUW,KAAV,CAAgBC,sBAAhB,CAPU;AAQ3BrB,mBAAiBS,oBAAUO,MAAV,CAAiBL,UARP;AAS3BN,YAAUI,oBAAUM,MAAV,CAAiBJ,UATA;AAU3BP,cAAYK,oBAAUM,MAAV,CAAiBJ;AAVF,EAAhB,EAWTA;AA/BoB,CAAxB;;AAkCA7E,YAAY0D,YAAZ,GAA2B;AAC1BjB,UAAS+C,WADiB;AAE1BtD,aAAYsD,WAFc;AAG1BT,WAAUS,WAHgB;;AAK1BnC,wBAAuB,SALG;AAM1BC,+BAA8B,CANJ;AAO1BC,6BAA4B,CAPF;AAQ1BH,wBAAuB,CARG;AAS1Bd,gBAAe,sBAAO,KAAP,CATW;;AAW1BY,oBAAmB,2BAACd,CAAD;AAAA,SAAOA,EAAEqD,MAAF,KAAa,CAAb,IAAkBrD,EAAEsD,QAA3B;AAAA,EAXO;AAY1BlC,yBACImC,6BAAmBjC,YADvB;AAECkC,UAAQ,IAFT;AAGCC,YAAU,MAHX;AAICC,WAAS,MAJV;AAKCC,QAAM,wBALP;AAMCC,gBAAc;AANf,GAZ0B;AAoB1B5E,WAAU,EApBgB;;AAsB1BsB,aAAY;AACXkB,UAAQ,SADG;AAEXE,iBAAe,CAFJ;AAGXD,eAAa,CAHF;AAIXQ,mBAAiB,OAJN;AAKXH,mBAAiB,CALN;AAMXK,YAAU,SANC;AAOXD,cAAY,SAPD;AAQXL,cAAY,8CARD;AASXF,YAAU,EATC;AAUXC,YAAU,SAVC;;AAYXQ,KAAG;AAZQ;AAtBc,CAA3B;;kBAsCexE,W","file":"LinePrecent.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\n\nimport { isDefined, isNotDefined, noop, strokeDashTypes } from \"../utils\";\n\nimport {\n\tgetValueFromOverride,\n\tterminate,\n\tsaveNodeType,\n\tisHoverForInteractiveType,\n} from \"./utils\";\n\nimport EachLinePrecent from \"./wrapper/EachLinePrecent\";\nimport MouseLocationIndicator from \"./components/MouseLocationIndicator\";\nimport HoverTextNearMouse from \"./components/HoverTextNearMouse\";\nclass LinePrecent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleStart = this.handleStart.bind(this);\n\t\tthis.handleEnd = this.handleEnd.bind(this);\n\t\tthis.handleDrawLine = this.handleDrawLine.bind(this);\n\t\tthis.handleDragLine = this.handleDragLine.bind(this);\n\t\tthis.handleDragLineComplete = this.handleDragLineComplete.bind(this);\n\n\t\tthis.terminate = terminate.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\n\t\tthis.getSelectionState = isHoverForInteractiveType(\"percents\").bind(\n\t\t\tthis\n\t\t);\n\t\tthis.getHoverInteractive = this.getHoverInteractive.bind(this);\n\n\t\tthis.state = {\n\t\t\tpercent: \"\"\n\t\t};\n\t\tthis.nodes = [];\n\t}\n\thandleDragLine(index, newXYValue) {\n\t\tthis.setState({\n\t\t\toverride: {\n\t\t\t\tindex,\n\t\t\t\t...newXYValue,\n\t\t\t},\n\t\t});\n\t}\n\thandleDragLineComplete(moreProps) {\n\t\tconst { override } = this.state;\n\t\tif (isDefined(override)) {\n\t\t\tconst { percents } = this.props;\n\t\t\tconst newPercents = percents.map((each, idx) =>\n\t\t\t\tidx === override.index\n\t\t\t\t\t? {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tstart: [override.x1Value, override.y1Value],\n\t\t\t\t\t\tend: [override.x2Value, override.y2Value],\n\t\t\t\t\t\tselected: true,\n\t\t\t\t\t\tfirstItem: override.firstItem,\n\t\t\t\t\t\tlastItem: override.lastItem,\n\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tselected: false,\n\t\t\t\t\t}\n\t\t\t);\n\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\toverride: null,\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.props.onComplete(newPercents, moreProps);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\thandleDrawLine(xyValue, e, moreProps) {\n\t\tconst { current } = this.state;\n\t\tconst { percentFormat } = this.props;\n\n\t\tif (isDefined(current) && isDefined(current.start)) {\n\t\t\tthis.mouseMoved = true;\n\t\t\tthis.setState({\n\t\t\t\tcurrent: {\n\t\t\t\t\t...current,\n\t\t\t\t\tstart: current.start,\n\t\t\t\t\tend: xyValue,\n\t\t\t\t\tlastItem: moreProps.currentItem,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\thandleStart(xyValue, moreProps, e) {\n\t\tconst { current } = this.state;\n\t\tif (isNotDefined(current) || isNotDefined(current.start)) {\n\t\t\tthis.mouseMoved = false;\n\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tcurrent: {\n\t\t\t\t\t\t...current,\n\t\t\t\t\t\tstart: xyValue,\n\t\t\t\t\t\tend: null,\n\t\t\t\t\t\tfirstItem: moreProps.currentItem,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.props.onStart(moreProps, e);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\thandleEnd(xyValue, moreProps, e) {\n\t\tconst { current } = this.state;\n\t\tconst { percents, appearance, type } = this.props;\n\n\t\tif (this.mouseMoved && isDefined(current) && isDefined(current.start)) {\n\t\t\tconst newPercents = [\n\t\t\t\t...percents.map((d) => ({ ...d, selected: false })),\n\t\t\t\t{\n\t\t\t\t\tstart: current.start,\n\t\t\t\t\tend: xyValue,\n\t\t\t\t\tselected: true,\n\t\t\t\t\tappearance,\n\t\t\t\t\ttype,\n\t\t\t\t\tfirstItem: current.firstItem,\n\t\t\t\t\tlastItem: moreProps.currentItem,\n\t\t\t\t},\n\t\t\t];\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tcurrent: null,\n\t\t\t\t\tpercents: newPercents,\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.props.onComplete(newPercents, moreProps, e);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\tgetHoverInteractive(hovering, precentlLine) {\n\t\tprecentlLine.hovering = hovering;\n\t\tconst { isHover } = this.props;\n\t\tisHover(hovering, precentlLine);\n\t}\n\n\trender() {\n\t\tconst { appearance } = this.props;\n\t\tconst { enabled, snap, shouldDisableSnap, snapTo } = this.props;\n\t\tconst { currentPositionRadius, currentPositionStroke } = this.props;\n\t\tconst {\n\t\t\tcurrentPositionstrokeOpacity,\n\t\t\tcurrentPositionStrokeWidth,\n\t\t} = this.props;\n\t\tconst { hoverText, percents } = this.props;\n\t\tconst { current, override } = this.state;\n\n\n\t\tconst hoverTextWithDefault = {\n\t\t\t...LinePrecent.defaultProps.hoverText,\n\t\t\t...hoverText,\n\t\t};\n\n\t\tconst tempLine =\n      isDefined(current) && isDefined(current.end) ? (\n      \t<g>\n      \t\t<EachLinePrecent\n      \t\t\ttype=\"LINE\"\n      \t\t\tnoHover\n      \t\t\tx1Value={current.start[0]}\n      \t\t\ty1Value={current.start[1]}\n      \t\t\tx2Value={current.end[0]}\n      \t\t\ty2Value={current.end[1]}\n      \t\t\tstroke={appearance.stroke}\n      \t\t\thoverText={hoverTextWithDefault}\n      \t\t\tstrokeWidth={appearance.strokeWidth}\n      \t\t\tstrokeOpacity={appearance.strokeOpacity}\n      \t\t\tfontSize={appearance.fontSize}\n      \t\t\tfontFill={appearance.fontFill}\n      \t\t\tfontFamily={appearance.fontFamily}\n      \t\t\tfirstItem={current.firstItem}\n      \t\t\tlastItem={current.lastItem}\n      \t\t\tedgeStrokeWidth={appearance.edgeStrokeWidth}\n      \t\t\tedgeInteractiveCursor=\"react-stockcharts-move-cursor\"\n      \t\t\tlineInteractiveCursor=\"react-stockcharts-move-cursor\"\n      \t\t\t{...current}\n      \t\t/>\n      \t</g>\n      ) : null;\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t{percents.map((each, idx) => {\n\t\t\t\t\tconst eachAppearance = isDefined(each.appearance)\n\t\t\t\t\t\t? { ...appearance, ...each.appearance }\n\t\t\t\t\t\t: appearance;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<EachLinePrecent\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tref={this.saveNodeType(idx)}\n\t\t\t\t\t\t\tindex={idx}\n\t\t\t\t\t\t\ttype=\"LINE\"\n\t\t\t\t\t\t\tlabel={each.label} // TODO\n\t\t\t\t\t\t\tselected={each.selected}\n\t\t\t\t\t\t\tfirstItem={each.firstItem}\n\t\t\t\t\t\t\tlastItem={each.lastItem}\n\t\t\t\t\t\t\tx1Value={getValueFromOverride(\n\t\t\t\t\t\t\t\toverride,\n\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\"x1Value\",\n\t\t\t\t\t\t\t\teach.start[0]\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\ty1Value={getValueFromOverride(\n\t\t\t\t\t\t\t\toverride,\n\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\"y1Value\",\n\t\t\t\t\t\t\t\teach.start[1]\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tx2Value={getValueFromOverride(\n\t\t\t\t\t\t\t\toverride,\n\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\"x2Value\",\n\t\t\t\t\t\t\t\teach.end[0]\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\ty2Value={getValueFromOverride(\n\t\t\t\t\t\t\t\toverride,\n\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\"y2Value\",\n\t\t\t\t\t\t\t\teach.end[1]\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tstroke={eachAppearance.stroke}\n\t\t\t\t\t\t\tstrokeWidth={eachAppearance.strokeWidth}\n\t\t\t\t\t\t\tstrokeOpacity={eachAppearance.strokeOpacity}\n\t\t\t\t\t\t\tstrokeDasharray={eachAppearance.strokeDasharray}\n\t\t\t\t\t\t\tedgeStroke={eachAppearance.edgeStroke}\n\t\t\t\t\t\t\tedgeFill={eachAppearance.edgeFill}\n\t\t\t\t\t\t\tedgeStrokeWidth={eachAppearance.edgeStrokeWidth}\n\t\t\t\t\t\t\tfontSize={eachAppearance.fontSize}\n\t\t\t\t\t\t\tfontFill={eachAppearance.fontFill}\n\t\t\t\t\t\t\tfontFamily={eachAppearance.fontFamily}\n\t\t\t\t\t\t\tr={eachAppearance.r}\n\t\t\t\t\t\t\thoverText={hoverTextWithDefault}\n\t\t\t\t\t\t\tonDrag={this.handleDragLine}\n\t\t\t\t\t\t\tonDragComplete={this.handleDragLineComplete}\n\t\t\t\t\t\t\tedgeInteractiveCursor=\"react-stockcharts-move-cursor\"\n\t\t\t\t\t\t\tlineInteractiveCursor=\"react-stockcharts-move-cursor\"\n\t\t\t\t\t\t\tgetHoverInteractive={hovering => this.getHoverInteractive(hovering, each)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t{tempLine}\n\t\t\t\t<MouseLocationIndicator\n\t\t\t\t\tenabled={enabled}\n\t\t\t\t\tsnap={snap}\n\t\t\t\t\tshouldDisableSnap={shouldDisableSnap}\n\t\t\t\t\tsnapTo={snapTo}\n\t\t\t\t\tr={currentPositionRadius}\n\t\t\t\t\tstroke={currentPositionStroke}\n\t\t\t\t\tstrokeOpacity={currentPositionstrokeOpacity}\n\t\t\t\t\tstrokeWidth={currentPositionStrokeWidth}\n\t\t\t\t\tonMouseDown={this.handleStart}\n\t\t\t\t\tonClick={this.handleEnd}\n\t\t\t\t\tonMouseMove={this.handleDrawLine}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nLinePrecent.propTypes = {\n\tsnap: PropTypes.bool.isRequired,\n\tenabled: PropTypes.bool.isRequired,\n\tsnapTo: PropTypes.func,\n\tshouldDisableSnap: PropTypes.func.isRequired,\n\n\tonStart: PropTypes.func.isRequired,\n\tonComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func,\n\tonDoubleClick: PropTypes.func,\n\n\tcurrentPositionStroke: PropTypes.string,\n\tcurrentPositionStrokeWidth: PropTypes.number,\n\tcurrentPositionstrokeOpacity: PropTypes.number,\n\tcurrentPositionRadius: PropTypes.number,\n\n\thoverText: PropTypes.object.isRequired,\n\n\tpercents: PropTypes.array.isRequired,\n\n\tappearance: PropTypes.shape({\n\t\tfontFamily: PropTypes.string.isRequired,\n\t\tfontSize: PropTypes.number.isRequired,\n\t\tfontFill: PropTypes.string.isRequired,\n\t\tstroke: PropTypes.string.isRequired,\n\t\tstrokeOpacity: PropTypes.number.isRequired,\n\t\tstrokeWidth: PropTypes.number.isRequired,\n\t\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\n\t\tedgeFill: PropTypes.string.isRequired,\n\t\tedgeStroke: PropTypes.string.isRequired,\n\t}).isRequired,\n};\n\nLinePrecent.defaultProps = {\n\tonStart: noop,\n\tonComplete: noop,\n\tonSelect: noop,\n\n\tcurrentPositionStroke: \"#000000\",\n\tcurrentPositionstrokeOpacity: 1,\n\tcurrentPositionStrokeWidth: 3,\n\tcurrentPositionRadius: 0,\n\tpercentFormat: format(\".2%\"),\n\n\tshouldDisableSnap: (e) => e.button === 2 || e.shiftKey,\n\thoverText: {\n\t\t...HoverTextNearMouse.defaultProps,\n\t\tenable: true,\n\t\tbgHeight: \"auto\",\n\t\tbgWidth: \"auto\",\n\t\ttext: \"Click to select object\",\n\t\tselectedText: \"\",\n\t},\n\tpercents: [],\n\n\tappearance: {\n\t\tstroke: \"#000000\",\n\t\tstrokeOpacity: 1,\n\t\tstrokeWidth: 1,\n\t\tstrokeDasharray: \"Solid\",\n\t\tedgeStrokeWidth: 1,\n\t\tedgeFill: \"#FFFFFF\",\n\t\tedgeStroke: \"#000000\",\n\t\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n\t\tfontSize: 16,\n\t\tfontFill: \"#000000\",\n\n\t\tr: 6,\n\t},\n};\n\nexport default LinePrecent;\n"]}