{"version":3,"sources":["../../../../src/lib/interactive/wrapper/EachHorizontalLine.js"],"names":["getNewXY","EachHorizontalLine","props","handleEdge1Drag","bind","handleLineDragStart","handleLineDrag","handleEdge1DragStart","handleDragComplete","handleHover","isHover","saveNodeType","nodes","state","hover","anchor","undefined","width","x1Value","x2Value","y1Value","y2Value","dragStart","moreProps","index","onDrag","yScale","chartConfig","startPos","mouseXY","y1","y2","dy","newY1Value","invert","newY2Value","setState","onDragComplete","hovering","xScale","domain","type","stroke","strokeWidth","strokeOpacity","strokeDasharray","r","edgeStrokeWidth","edgeFill","edgeStroke","edgeInteractiveCursor","lineInteractiveCursor","hoverText","selected","hoverTextEnabled","enable","hoverTextSelected","selectedText","hoverTextUnselected","text","restHoverTextProps","getHoverInteractive","Component","xAccessor","plotData","mouseY","x","slice","sort","d3Ascending","small","big","y","newY","Math","min","max","propTypes","PropTypes","any","isRequired","number","oneOf","func","onEdge1Drag","onEdge2Drag","onSelect","onUnSelect","defaultClassName","string","bool","strokeDashTypes","object","defaultProps","noop"],"mappings":";;;;;;;;;;;;QA0MgBA,Q,GAAAA,Q;;AA1MhB;;;;AACA;;;;AAEA;;AACA;;AACA;;AACA;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEMC,kB;;;AACL,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACZA,KADY;;AAGlB,QAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,OAAvB;AACA,QAAKC,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBD,IAAzB,OAA3B;AACA,QAAKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,OAAtB;AACA,QAAKG,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BH,IAA1B,OAA5B;AACA,QAAKI,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBJ,IAAxB,OAA1B;AACA,QAAKK,WAAL,GAAmB,MAAKA,WAAL,CAAiBL,IAAjB,OAAnB;;AAEA,QAAKM,OAAL,GAAeA,gBAAQN,IAAR,OAAf;AACA,QAAKO,YAAL,GAAoBA,qBAAaP,IAAb,OAApB;AACA,QAAKQ,KAAL,GAAa,EAAb;;AAEA,QAAKC,KAAL,GAAa;AACZC,UAAO,KADK;AAEZC,WAAQC,SAFI;AAGZC,UAAO,CAAC,MAAKf,KAAL,CAAWgB,OAAX,GAAqB,MAAKhB,KAAL,CAAWiB,OAAjC,IAA4C;AAHvC,GAAb;AAdkB;AAmBlB;;;;wCACqB;AAAA,gBAIjB,KAAKjB,KAJY;AAAA,OAEpBgB,OAFoB,UAEpBA,OAFoB;AAAA,OAEXE,OAFW,UAEXA,OAFW;AAAA,OAGpBD,OAHoB,UAGpBA,OAHoB;AAAA,OAGXE,OAHW,UAGXA,OAHW;;;AAMrB,QAAKC,SAAL,GAAiB;AAChBJ,oBADgB,EACPE,gBADO;AAEhBD,oBAFgB,EAEPE;AAFO,IAAjB;AAIA;;;iCACcE,S,EAAW;AAAA,iBACC,KAAKrB,KADN;AAAA,OACjBsB,KADiB,WACjBA,KADiB;AAAA,OACVC,MADU,WACVA,MADU;AAAA,oBAQrB,KAAKH,SARgB;AAAA,OAIxBJ,OAJwB,cAIxBA,OAJwB;AAAA,OAKxBE,OALwB,cAKxBA,OALwB;AAAA,OAMxBD,OANwB,cAMxBA,OANwB;AAAA,OAOxBE,OAPwB,cAOxBA,OAPwB;AAAA,OAUFK,MAVE,GAUWH,SAVX,CAUjBI,WAViB,CAUFD,MAVE;AAAA,OAWjBE,QAXiB,GAWKL,SAXL,CAWjBK,QAXiB;AAAA,OAWPC,OAXO,GAWKN,SAXL,CAWPM,OAXO;;;AAazB,OAAMC,KAAKJ,OAAON,OAAP,CAAX;AACA,OAAMW,KAAKL,OAAOL,OAAP,CAAX;;AAEA,OAAMW,KAAKJ,SAAS,CAAT,IAAcC,QAAQ,CAAR,CAAzB;;AAEA,OAAMI,aAAaP,OAAOQ,MAAP,CAAcJ,KAAKE,EAAnB,CAAnB;AACA,OAAMG,aAAaT,OAAOQ,MAAP,CAAcH,KAAKC,EAAnB,CAAnB;;AAEAP,UAAOD,KAAP,EAAc;AACbN,oBADa;AAEbE,aAASa,UAFI;AAGbd,oBAHa;AAIbE,aAASc;AAJI,IAAd;AAMA;;;yCACsB;AAAA,iBAIlB,KAAKjC,KAJa;AAAA,OAErBgB,OAFqB,WAErBA,OAFqB;AAAA,OAEZE,OAFY,WAEZA,OAFY;AAAA,OAGrBD,OAHqB,WAGrBA,OAHqB;AAAA,OAGZE,OAHY,WAGZA,OAHY;;;AAMtB,QAAKC,SAAL,GAAiB;AAChBJ,oBADgB,EACPE,gBADO;AAEhBD,oBAFgB,EAEPE;AAFO,IAAjB;AAIA,QAAKe,QAAL,CAAc;AACbrB,YAAQ;AADK,IAAd;AAGA;;;uCAE2B;AAAA;;AAC3B,QAAKqB,QAAL,CAAc;AACbrB,YAAQC;AADK,IAAd;AAGA,mBAAKd,KAAL,EAAWmC,cAAX;AACA;;;kCACed,S,EAAW;AAAA,iBACA,KAAKrB,KADL;AAAA,OAClBsB,KADkB,WAClBA,KADkB;AAAA,OACXC,MADW,WACXA,MADW;AAAA,qBAEqB,KAAKH,SAF1B;AAAA,OAElBJ,OAFkB,eAElBA,OAFkB;AAAA,OAETE,OAFS,eAETA,OAFS;AAAA,OAEAD,OAFA,eAEAA,OAFA;AAAA,OAESE,OAFT,eAESA,OAFT;AAAA,OAGHK,MAHG,GAGUH,SAHV,CAGlBI,WAHkB,CAGHD,MAHG;AAAA,OAKlBE,QALkB,GAKIL,SALJ,CAKlBK,QALkB;AAAA,OAKRC,OALQ,GAKIN,SALJ,CAKRM,OALQ;;;AAO1B,OAAMC,KAAKJ,OAAON,OAAP,CAAX;AACA,OAAMW,KAAKL,OAAOL,OAAP,CAAX;;AAEA,OAAMW,KAAKJ,SAAS,CAAT,IAAcC,QAAQ,CAAR,CAAzB;AACA,OAAMI,aAAaP,OAAOQ,MAAP,CAAcJ,KAAKE,EAAnB,CAAnB;AACA,OAAMG,aAAaT,OAAOQ,MAAP,CAAcH,KAAKC,EAAnB,CAAnB;;AAEAP,UAAOD,KAAP,EAAc;AACbN,oBADa;AAEbE,aAASa,UAFI;AAGbd,oBAHa;AAIbE,aAASc;AAJI,IAAd;AAMA;;;8BAEWZ,S,EAAW;AACtB,OAAI,KAAKV,KAAL,CAAWC,KAAX,KAAqBS,UAAUe,QAAnC,EAA6C;AAC5C,SAAKF,QAAL,CAAc;AACbtB,YAAOS,UAAUe;AADJ,KAAd;AAGA,SAAKF,QAAL,CAAc;AACbnB,YAAO,CAACM,UAAUgB,MAAV,CAAiBC,MAAjB,GAA0B,CAA1B,IAA+BjB,UAAUgB,MAAV,CAAiBC,MAAjB,GAA0B,CAA1B,CAAhC,IAAgE;AAD1D,KAAd;AAGA;AACD;;;2BACQ;AAAA,iBAqBJ,KAAKtC,KArBD;AAAA,OAEPgB,OAFO,WAEPA,OAFO;AAAA,OAGPE,OAHO,WAGPA,OAHO;AAAA,OAIPD,OAJO,WAIPA,OAJO;AAAA,OAKPE,OALO,WAKPA,OALO;AAAA,OAMPoB,IANO,WAMPA,IANO;AAAA,OAOPC,MAPO,WAOPA,MAPO;AAAA,OAQPC,WARO,WAQPA,WARO;AAAA,OASPC,aATO,WASPA,aATO;AAAA,OAUPC,eAVO,WAUPA,eAVO;AAAA,OAWPC,CAXO,WAWPA,CAXO;AAAA,OAYPC,eAZO,WAYPA,eAZO;AAAA,OAaPC,QAbO,WAaPA,QAbO;AAAA,OAcPC,UAdO,WAcPA,UAdO;AAAA,OAePC,qBAfO,WAePA,qBAfO;AAAA,OAgBPC,qBAhBO,WAgBPA,qBAhBO;AAAA,OAiBPC,SAjBO,WAiBPA,SAjBO;AAAA,OAkBPC,QAlBO,WAkBPA,QAlBO;AAAA,OAoBPhB,cApBO,WAoBPA,cApBO;;AAAA,OAwBCiB,gBAxBD,GA4BJF,SA5BI,CAwBPG,MAxBO;AAAA,OAyBOC,iBAzBP,GA4BJJ,SA5BI,CAyBPK,YAzBO;AAAA,OA0BDC,mBA1BC,GA4BJN,SA5BI,CA0BPO,IA1BO;AAAA,OA2BJC,kBA3BI,4BA4BJR,SA5BI;;AAAA,gBA8ByB,KAAKvC,KA9B9B;AAAA,OA8BAC,KA9BA,UA8BAA,KA9BA;AAAA,OA8BOC,MA9BP,UA8BOA,MA9BP;AAAA,OA8BeE,KA9Bf,UA8BeA,KA9Bf;;AA+BR,UAAO;AAAA;AAAA;AACN,kCAAC,sBAAD;AACC,UAAK,KAAKN,YAAL,CAAkB,MAAlB,CADN;AAEC,eAAU0C,YAAYvC,KAFvB;AAGC,cAAS,KAAKL,WAHf;AAIC,gBAAW,KAAKA,WAJjB;AAKC,cAASS,OALV;AAMC,cAASE,OANV;AAOC,cAASD,OAPV;AAQC,cAASE,OARV;AASC,WAAMoB,IATP;AAUC,aAAQC,MAVT;AAWC,kBAAc5B,SAASuC,QAAV,GAAsBV,cAAc,CAApC,GAAwCA,WAXtD;AAYC,oBAAeC,aAZhB;AAaC,sBAAiBC,eAblB;AAcC,6BAAwBM,qBAdzB;AAeC,kBAAa,KAAK9C,mBAfnB;AAgBC,aAAQ,KAAKC,cAhBd;AAiBC,qBAAgB+B,cAjBjB;AAkBC,0BAAqB,KAAKnC,KAAL,CAAW2D;AAlBjC,MADM;AAqBN,kCAAC,yBAAD;AACC,UAAK,KAAKlD,YAAL,CAAkB,OAAlB,CADN;AAEC,WAAM0C,YAAYvC,KAFnB;AAGC,SAAIG,KAHL;AAIC,SAAIG,OAJL;AAKC,QAAG0B,CALJ;AAMC,WAAME;AACN;AAPD,OAQC,QAAQC,UART;AASC,kBAAaF,eATd;AAUC,oBAAe,CAVhB;AAWC,6BAAwBG,qBAXzB;AAYC,kBAAa,KAAK3C,oBAZnB;AAaC,aAAQ,KAAKJ,eAbd;AAcC,qBAAgB,KAAKK;AAdtB,MArBM;AAqCN,kCAAC,4BAAD;AACC,WAAM8C,oBAAoBxC;AAD3B,OAEK8C,kBAFL;AAGC,WAAMP,WAAWG,iBAAX,GAA+BE;AAHtC;AArCM,IAAP;AA2CA;;;;EA3L+BI,gB;;AA8L1B,SAAS9D,QAAT,CAAkBuB,SAAlB,EAA6B;AAAA,KAC3BgB,MAD2B,GACuChB,SADvC,CAC3BgB,MAD2B;AAAA,KACJb,MADI,GACuCH,SADvC,CACnBI,WADmB,CACJD,MADI;AAAA,KACMqC,SADN,GACuCxC,SADvC,CACMwC,SADN;AAAA,KACiBC,QADjB,GACuCzC,SADvC,CACiByC,QADjB;AAAA,KAC2BnC,OAD3B,GACuCN,SADvC,CAC2BM,OAD3B;;AAEnC,KAAMoC,SAASpC,QAAQ,CAAR,CAAf;AACA,KAAMqC,IAAI,8BAAU3B,MAAV,EAAkBwB,SAAlB,EAA6BlC,OAA7B,EAAsCmC,QAAtC,CAAV;;AAHmC,6BAKdtC,OAAOc,MAAP,GAAgB2B,KAAhB,GAAwBC,IAAxB,CAA6BC,kBAA7B,CALc;AAAA;AAAA,KAK5BC,KAL4B;AAAA,KAKrBC,GALqB;;AAMnC,KAAMC,IAAI9C,OAAOQ,MAAP,CAAc+B,MAAd,CAAV;AACA,KAAMQ,OAAOC,KAAKC,GAAL,CAASD,KAAKE,GAAL,CAASJ,CAAT,EAAYF,KAAZ,CAAT,EAA6BC,GAA7B,CAAb;;AAEA,QAAO,CAACL,CAAD,EAAIO,IAAJ,CAAP;AACA;;AAEDxE,mBAAmB4E,SAAnB,GAA+B;AAC9B3D,UAAS4D,oBAAUC,GAAV,CAAcC,UADO;AAE9B7D,UAAS2D,oBAAUC,GAAV,CAAcC,UAFO;AAG9B5D,UAAS0D,oBAAUC,GAAV,CAAcC,UAHO;AAI9B3D,UAASyD,oBAAUC,GAAV,CAAcC,UAJO;;AAM9BxD,QAAOsD,oBAAUG,MANa;;AAQ9BxC,OAAMqC,oBAAUI,KAAV,CAAgB,CACrB,YADqB,CAAhB,EAEHF,UAV2B;;AAY9BvD,SAAQqD,oBAAUK,IAAV,CAAeH,UAZO;AAa9BI,cAAaN,oBAAUK,IAAV,CAAeH,UAbE;AAc9BK,cAAaP,oBAAUK,IAAV,CAAeH,UAdE;AAe9B3C,iBAAgByC,oBAAUK,IAAV,CAAeH,UAfD;AAgB9BM,WAAUR,oBAAUK,IAAV,CAAeH,UAhBK;AAiB9BO,aAAYT,oBAAUK,IAAV,CAAeH,UAjBG;;AAmB9BlC,IAAGgC,oBAAUG,MAAV,CAAiBD,UAnBU;AAoB9BpC,gBAAekC,oBAAUG,MAAV,CAAiBD,UApBF;AAqB9BQ,mBAAkBV,oBAAUW,MArBE;;AAuB9BpC,WAAUyB,oBAAUY,IAvBU;;AAyB9BhD,SAAQoC,oBAAUW,MAAV,CAAiBT,UAzBK;AA0B9BrC,cAAamC,oBAAUG,MAAV,CAAiBD,UA1BA;AA2B9BnC,kBAAiBiC,oBAAUI,KAAV,CAAgBS,sBAAhB,CA3Ba;;AA6B9B5C,kBAAiB+B,oBAAUG,MAAV,CAAiBD,UA7BJ;AA8B9B/B,aAAY6B,oBAAUW,MAAV,CAAiBT,UA9BC;AA+B9B9B,wBAAuB4B,oBAAUW,MAAV,CAAiBT,UA/BV;AAgC9B7B,wBAAuB2B,oBAAUW,MAAV,CAAiBT,UAhCV;AAiC9BhC,WAAU8B,oBAAUW,MAAV,CAAiBT,UAjCG;AAkC9B5B,YAAW0B,oBAAUc,MAAV,CAAiBZ;AAlCE,CAA/B;;AAqCA/E,mBAAmB4F,YAAnB,GAAkC;AACjCpE,SAAQqE,WADyB;AAEjCV,cAAaU,WAFoB;AAGjCT,cAAaS,WAHoB;AAIjCzD,iBAAgByD,WAJiB;AAKjCR,WAAUQ,WALuB;AAMjCP,aAAYO,WANqB;;AAQjCzC,WAAU,KARuB;AASjCf,WAAU,KATuB;;AAWjCW,aAAY,SAXqB;AAYjCD,WAAU,SAZuB;AAajCD,kBAAiB,CAbgB;AAcjCD,IAAG,CAd8B;AAejCH,cAAa,CAfoB;AAgBjCC,gBAAe,CAhBkB;AAiBjCC,kBAAiB,OAjBgB;AAkBjCO,YAAW;AACVG,UAAQ;AADE;AAlBsB,CAAlC;;kBAuBetD,kB","file":"EachHorizontalLine.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ascending as d3Ascending } from \"d3-array\";\nimport { noop, strokeDashTypes } from \"../../utils\";\nimport { saveNodeType, isHover } from \"../utils\";\nimport { getXValue } from \"../../utils/ChartDataUtil\";\n\nimport StraightLine from \"../components/StraightLine\";\nimport ClickableCircle from \"../components/ClickableCircle\";\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\n\nclass EachHorizontalLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleEdge1Drag = this.handleEdge1Drag.bind(this);\n\t\tthis.handleLineDragStart = this.handleLineDragStart.bind(this);\n\t\tthis.handleLineDrag = this.handleLineDrag.bind(this);\n\t\tthis.handleEdge1DragStart = this.handleEdge1DragStart.bind(this);\n\t\tthis.handleDragComplete = this.handleDragComplete.bind(this);\n\t\tthis.handleHover = this.handleHover.bind(this);\n\n\t\tthis.isHover = isHover.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.nodes = {};\n\n\t\tthis.state = {\n\t\t\thover: false,\n\t\t\tanchor: undefined,\n\t\t\twidth: (this.props.x1Value + this.props.x2Value) / 2\n\t\t};\n\t}\n\thandleLineDragStart() {\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t} = this.props;\n\n\t\tthis.dragStart = {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t};\n\t}\n\thandleLineDrag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\n\t\tconst {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t} = this.dragStart;\n\n\t\tconst { chartConfig: { yScale } } = moreProps;\n\t\tconst { startPos, mouseXY } = moreProps;\n\n\t\tconst y1 = yScale(y1Value);\n\t\tconst y2 = yScale(y2Value);\n\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\t\tconst newY2Value = yScale.invert(y2 - dy);\n\n\t\tonDrag(index, {\n\t\t\tx1Value,\n\t\t\ty1Value: newY1Value,\n\t\t\tx2Value,\n\t\t\ty2Value: newY2Value,\n\t\t});\n\t}\n\thandleEdge1DragStart() {\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t} = this.props;\n\n\t\tthis.dragStart = {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t};\n\t\tthis.setState({\n\t\t\tanchor: \"edge1\"\n\t\t});\n\t}\n\n\thandleDragComplete(...rest) {\n\t\tthis.setState({\n\t\t\tanchor: undefined\n\t\t});\n\t\tthis.props.onDragComplete(...rest);\n\t}\n\thandleEdge1Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst { x1Value, y1Value, x2Value, y2Value } = this.dragStart;\n\t\tconst { chartConfig: { yScale } } = moreProps;\n\n\t\tconst { startPos, mouseXY } = moreProps;\n\n\t\tconst y1 = yScale(y1Value);\n\t\tconst y2 = yScale(y2Value);\n\n\t\tconst dy = startPos[1] - mouseXY[1];\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\t\tconst newY2Value = yScale.invert(y2 - dy);\n\n\t\tonDrag(index, {\n\t\t\tx1Value,\n\t\t\ty1Value: newY1Value,\n\t\t\tx2Value,\n\t\t\ty2Value: newY2Value,\n\t\t});\n\t}\n\n\thandleHover(moreProps) {\n\t\tif (this.state.hover !== moreProps.hovering) {\n\t\t\tthis.setState({\n\t\t\t\thover: moreProps.hovering\n\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\twidth: (moreProps.xScale.domain()[0] + moreProps.xScale.domain()[1]) / 2\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\tconst {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t\ttype,\n\t\t\tstroke,\n\t\t\tstrokeWidth,\n\t\t\tstrokeOpacity,\n\t\t\tstrokeDasharray,\n\t\t\tr,\n\t\t\tedgeStrokeWidth,\n\t\t\tedgeFill,\n\t\t\tedgeStroke,\n\t\t\tedgeInteractiveCursor,\n\t\t\tlineInteractiveCursor,\n\t\t\thoverText,\n\t\t\tselected,\n\n\t\t\tonDragComplete,\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\tenable: hoverTextEnabled,\n\t\t\tselectedText: hoverTextSelected,\n\t\t\ttext: hoverTextUnselected,\n\t\t\t...restHoverTextProps\n\t\t} = hoverText;\n\n\t\tconst { hover, anchor, width } = this.state;\n\t\treturn <g>\n\t\t\t<StraightLine\n\t\t\t\tref={this.saveNodeType(\"line\")}\n\t\t\t\tselected={selected || hover}\n\t\t\t\tonHover={this.handleHover}\n\t\t\t\tonUnHover={this.handleHover}\n\t\t\t\tx1Value={x1Value}\n\t\t\t\ty1Value={y1Value}\n\t\t\t\tx2Value={x2Value}\n\t\t\t\ty2Value={y2Value}\n\t\t\t\ttype={type}\n\t\t\t\tstroke={stroke}\n\t\t\t\tstrokeWidth={(hover || selected) ? strokeWidth + 1 : strokeWidth}\n\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\tstrokeDasharray={strokeDasharray}\n\t\t\t\tinteractiveCursorClass={lineInteractiveCursor}\n\t\t\t\tonDragStart={this.handleLineDragStart}\n\t\t\t\tonDrag={this.handleLineDrag}\n\t\t\t\tonDragComplete={onDragComplete}\n\t\t\t\tgetHoverInteractive={this.props.getHoverInteractive}\n\t\t\t/>\n\t\t\t<ClickableCircle\n\t\t\t\tref={this.saveNodeType(\"edge1\")}\n\t\t\t\tshow={selected || hover}\n\t\t\t\tcx={width}\n\t\t\t\tcy={y1Value}\n\t\t\t\tr={r}\n\t\t\t\tfill={edgeFill}\n\t\t\t\t// stroke={anchor === \"edge1\" ? stroke : edgeStroke}\n\t\t\t\tstroke={edgeStroke}\n\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\tstrokeOpacity={1}\n\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\n\t\t\t\tonDragStart={this.handleEdge1DragStart}\n\t\t\t\tonDrag={this.handleEdge1Drag}\n\t\t\t\tonDragComplete={this.handleDragComplete}\n\t\t\t/>\n\t\t\t<HoverTextNearMouse\n\t\t\t\tshow={hoverTextEnabled && hover}\n\t\t\t\t{...restHoverTextProps}\n\t\t\t\ttext={selected ? hoverTextSelected : hoverTextUnselected}\n\t\t\t/>\n\t\t</g>;\n\t}\n}\n\nexport function getNewXY(moreProps) {\n\tconst { xScale, chartConfig: { yScale }, xAccessor, plotData, mouseXY } = moreProps;\n\tconst mouseY = mouseXY[1];\n\tconst x = getXValue(xScale, xAccessor, mouseXY, plotData);\n\n\tconst [small, big] = yScale.domain().slice().sort(d3Ascending);\n\tconst y = yScale.invert(mouseY);\n\tconst newY = Math.min(Math.max(y, small), big);\n\n\treturn [x, newY];\n}\n\nEachHorizontalLine.propTypes = {\n\tx1Value: PropTypes.any.isRequired,\n\tx2Value: PropTypes.any.isRequired,\n\ty1Value: PropTypes.any.isRequired,\n\ty2Value: PropTypes.any.isRequired,\n\n\tindex: PropTypes.number,\n\n\ttype: PropTypes.oneOf([\n\t\t\"horizontal\"\n\t]).isRequired,\n\n\tonDrag: PropTypes.func.isRequired,\n\tonEdge1Drag: PropTypes.func.isRequired,\n\tonEdge2Drag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func.isRequired,\n\tonUnSelect: PropTypes.func.isRequired,\n\n\tr: PropTypes.number.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tdefaultClassName: PropTypes.string,\n\n\tselected: PropTypes.bool,\n\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\n\tedgeStrokeWidth: PropTypes.number.isRequired,\n\tedgeStroke: PropTypes.string.isRequired,\n\tedgeInteractiveCursor: PropTypes.string.isRequired,\n\tlineInteractiveCursor: PropTypes.string.isRequired,\n\tedgeFill: PropTypes.string.isRequired,\n\thoverText: PropTypes.object.isRequired,\n};\n\nEachHorizontalLine.defaultProps = {\n\tonDrag: noop,\n\tonEdge1Drag: noop,\n\tonEdge2Drag: noop,\n\tonDragComplete: noop,\n\tonSelect: noop,\n\tonUnSelect: noop,\n\n\tselected: false,\n\thovering: false,\n\n\tedgeStroke: \"#000000\",\n\tedgeFill: \"#FFFFFF\",\n\tedgeStrokeWidth: 2,\n\tr: 5,\n\tstrokeWidth: 1,\n\tstrokeOpacity: 1,\n\tstrokeDasharray: \"Solid\",\n\thoverText: {\n\t\tenable: false,\n\t}\n};\n\nexport default EachHorizontalLine;\n"]}