{"version":3,"sources":["../../../../src/lib/interactive/wrapper/EachLinePrecent.js"],"names":["getNewXY","EachLinePrecent","props","handleEdge1Drag","bind","handleEdge2Drag","handleLineDragStart","handleLineDrag","handleEdge1DragStart","handleEdge2DragStart","handleDragComplete","handleHover","isHover","saveNodeType","nodes","state","hover","percent","move","Edge1DItem","firstItem","Edge2DItem","lastItem","x1Value","y1Value","x2Value","y2Value","dragStart","moreProps","index","onDrag","xScale","yScale","chartConfig","xAccessor","fullData","startPos","mouseXY","x1","y1","x2","y2","dx","dy","newX1Value","newY1Value","invert","newX2Value","newY2Value","find","item","idx","setState","anchor","currentItem","undefined","onDragComplete","hovering","type","stroke","strokeWidth","strokeOpacity","strokeDasharray","r","edgeStrokeWidth","edgeFill","edgeStroke","edgeInteractiveCursor","lineInteractiveCursor","hoverText","selected","fontSize","fontFill","fontFamily","hoverTextEnabled","enable","hoverTextSelected","selectedText","hoverTextUnselected","text","restHoverTextProps","percentFormat","xyProvider","start","end","x","y","getHoverInteractive","nextProps","prevState","Component","plotData","mouseY","domain","slice","sort","d3Ascending","small","big","newY","Math","min","max","helper","retracements","map","each","propTypes","PropTypes","any","isRequired","number","label","string","oneOf","func","onEdge1Drag","onEdge2Drag","onSelect","onUnSelect","defaultClassName","bool","strokeDashTypes","object","defaultProps","noop"],"mappings":"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","file":"EachLinePrecent.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\n\nimport { ascending as d3Ascending } from \"d3-array\";\nimport { noop, strokeDashTypes, isDefined } from \"../../utils\";\nimport { saveNodeType, isHover } from \"../utils\";\nimport { getXValue } from \"../../utils/ChartDataUtil\";\n\nimport StraightLine, { generateLine } from \"../components/StraightLine\";\nimport ClickableCircle from \"../components/ClickableCircle\";\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\nimport Text from \"../components/Text\";\n\nclass EachLinePrecent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleEdge1Drag = this.handleEdge1Drag.bind(this);\n\t\tthis.handleEdge2Drag = this.handleEdge2Drag.bind(this);\n\t\tthis.handleLineDragStart = this.handleLineDragStart.bind(this);\n\t\tthis.handleLineDrag = this.handleLineDrag.bind(this);\n\n\t\tthis.handleEdge1DragStart = this.handleEdge1DragStart.bind(this);\n\t\tthis.handleEdge2DragStart = this.handleEdge2DragStart.bind(this);\n\n\t\tthis.handleDragComplete = this.handleDragComplete.bind(this);\n\n\t\tthis.handleHover = this.handleHover.bind(this);\n\n\t\tthis.isHover = isHover.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.nodes = {};\n\n\t\tthis.state = {\n\t\t\thover: false,\n\t\t\tpercent: \"\",\n\t\t\tmove: false,\n\t\t\tEdge1DItem: this.props.firstItem,\n\t\t\tEdge2DItem: this.props.lastItem,\n\t\t};\n\t}\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\n\t\tif (\n\t\t\t(prevState.Edge1DItem !== nextProps.firstItem ||\n                prevState.Edge2DItem !== nextProps.lastItem) &&\n            prevState.move === false\n\t\t) {\n\t\t\treturn {\n\t\t\t\tEdge1DItem: nextProps.firstItem,\n\t\t\t\tEdge2DItem: nextProps.lastItem,\n\t\t\t};\n\t\t}\n\t\treturn prevState;\n\t}\n\n\thandleLineDragStart() {\n\t\tconst { x1Value, y1Value, x2Value, y2Value } = this.props;\n\n\t\tthis.dragStart = {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t};\n\t}\n\thandleLineDrag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\n\t\tconst { x1Value, y1Value, x2Value, y2Value } = this.dragStart;\n\n\t\tconst {\n\t\t\txScale,\n\t\t\tchartConfig: { yScale },\n\t\t\txAccessor,\n\t\t\tfullData,\n\t\t} = moreProps;\n\t\tconst { startPos, mouseXY } = moreProps;\n\n\t\tif (isDefined(mouseXY)) {\n\t\t\tconst x1 = xScale(x1Value);\n\t\t\tconst y1 = yScale(y1Value);\n\t\t\tconst x2 = xScale(x2Value);\n\t\t\tconst y2 = yScale(y2Value);\n\n\t\t\tconst dx = startPos[0] - mouseXY[0];\n\t\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\t\tconst newX1Value = getXValue(\n\t\t\t\txScale,\n\t\t\t\txAccessor,\n\t\t\t\t[x1 - dx, y1 - dy],\n\t\t\t\tfullData\n\t\t\t);\n\t\t\tconst newY1Value = yScale.invert(y1 - dy);\n\t\t\tconst newX2Value = getXValue(\n\t\t\t\txScale,\n\t\t\t\txAccessor,\n\t\t\t\t[x2 - dx, y2 - dy],\n\t\t\t\tfullData\n\t\t\t);\n\t\t\tconst newY2Value = yScale.invert(y2 - dy);\n\n\t\t\tonDrag(index, {\n\t\t\t\tx1Value: newX1Value,\n\t\t\t\ty1Value: newY1Value,\n\t\t\t\tx2Value: newX2Value,\n\t\t\t\ty2Value: newY2Value,\n\t\t\t\tfirstItem: fullData.find(\n\t\t\t\t\t(item) => item.idx.index === newX1Value\n\t\t\t\t),\n\t\t\t\tlastItem: fullData.find(\n\t\t\t\t\t(item) => item.idx.index === newX2Value\n\t\t\t\t),\n\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\tanchor: \"edge1\",\n\t\t\t\tmove: true,\n\t\t\t\tEdge1DItem: fullData.find(\n\t\t\t\t\t(item) => item.idx.index === newX1Value\n\t\t\t\t),\n\t\t\t\tEdge2DItem: fullData.find(\n\t\t\t\t\t(item) => item.idx.index === newX2Value\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\t}\n\thandleEdge1DragStart(moreProps) {\n\t\tthis.setState({\n\t\t\tanchor: \"edge1\",\n\t\t\tmove: true,\n\t\t\tEdge1DItem: moreProps.currentItem,\n\t\t});\n\t}\n\thandleEdge2DragStart(moreProps) {\n\t\tthis.setState({\n\t\t\tanchor: \"edge2\",\n\t\t\tmove: true,\n\t\t\tEdge2DItem: moreProps.currentItem,\n\t\t});\n\t}\n\thandleDragComplete(...rest) {\n\t\tthis.setState({\n\t\t\tanchor: undefined,\n\t\t\tmove: false,\n\t\t});\n\t\tthis.props.onDragComplete(...rest);\n\t}\n\thandleEdge1Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst { x2Value, y2Value } = this.props;\n\t\tconst { Edge1DItem, Edge2DItem } = this.state;\n\n\t\tconst [x1Value, y1Value] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t\tfirstItem: Edge1DItem,\n\t\t\tlastItem: Edge2DItem,\n\t\t});\n\n\t\tthis.setState({\n\t\t\tmove: true,\n\t\t\tEdge1DItem: moreProps.currentItem,\n\t\t});\n\t}\n\thandleEdge2Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst { x1Value, y1Value } = this.props;\n\t\tconst [x2Value, y2Value] = getNewXY(moreProps);\n\t\tconst { Edge1DItem, Edge2DItem } = this.state;\n\n\t\tonDrag(index, {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t\tfirstItem: Edge1DItem,\n\t\t\tlastItem: Edge2DItem,\n\t\t});\n\n\t\tthis.setState({\n\t\t\tmove: true,\n\t\t\tEdge2DItem: moreProps.currentItem,\n\t\t});\n\t}\n\thandleHover(moreProps) {\n\t\tif (this.state.hover !== moreProps.hovering) {\n\t\t\tthis.setState({\n\t\t\t\thover: moreProps.hovering,\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\tconst {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t\ttype,\n\t\t\tstroke,\n\t\t\tstrokeWidth,\n\t\t\tstrokeOpacity,\n\t\t\tstrokeDasharray,\n\t\t\tr,\n\t\t\tedgeStrokeWidth,\n\t\t\tedgeFill,\n\t\t\tedgeStroke,\n\t\t\tedgeInteractiveCursor,\n\t\t\tlineInteractiveCursor,\n\t\t\thoverText,\n\t\t\tselected,\n\t\t\tfontSize,\n\t\t\tfontFill,\n\t\t\tfontFamily,\n\t\t\tonDragComplete,\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\tenable: hoverTextEnabled,\n\t\t\tselectedText: hoverTextSelected,\n\t\t\ttext: hoverTextUnselected,\n\t\t\t...restHoverTextProps\n\t\t} = hoverText;\n\n\t\tconst percentFormat = format(\".2%\");\n\n\t\tconst { hover, anchor } = this.state;\n\t\tconst { Edge1DItem, Edge2DItem } = this.state;\n\n\t\tconst xyProvider = ({ xScale, chartConfig }) => {\n\t\t\tconst { yScale } = chartConfig;\n\t\t\tconst { x1, y1, x2, y2 } = generateLine({\n\t\t\t\ttype: \"LINE\",\n\t\t\t\tstart: [x1Value, y1Value],\n\t\t\t\tend: [x2Value, y2Value],\n\t\t\t\txScale,\n\t\t\t\tyScale,\n\t\t\t});\n\n\t\t\tconst x = xScale((x1 + x2) / 2) + 30;\n\t\t\tconst y = yScale((y1 + y2) / 2) + 20;\n\t\t\treturn [x, y];\n\t\t};\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<StraightLine\n\t\t\t\t\tref={this.saveNodeType(\"line\")}\n\t\t\t\t\tselected={selected || hover}\n\t\t\t\t\tonHover={this.handleHover}\n\t\t\t\t\tonUnHover={this.handleHover}\n\t\t\t\t\tx1Value={x1Value}\n\t\t\t\t\ty1Value={y1Value}\n\t\t\t\t\tx2Value={x2Value}\n\t\t\t\t\ty2Value={y2Value}\n\t\t\t\t\ttype={type}\n\t\t\t\t\tstroke={stroke}\n\t\t\t\t\tstrokeWidth={\n\t\t\t\t\t\thover || selected ? strokeWidth + 1 : strokeWidth\n\t\t\t\t\t}\n\t\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\t\tstrokeDasharray={strokeDasharray}\n\t\t\t\t\tinteractiveCursorClass={lineInteractiveCursor}\n\t\t\t\t\tonDragStart={this.handleLineDragStart}\n\t\t\t\t\tonDrag={this.handleLineDrag}\n\t\t\t\t\tonDragComplete={onDragComplete}\n\t\t\t\t\tgetHoverInteractive={this.props.getHoverInteractive}\n\t\t\t\t/>\n\t\t\t\t<ClickableCircle\n\t\t\t\t\tref={this.saveNodeType(\"edge1\")}\n\t\t\t\t\tshow={selected || hover}\n\t\t\t\t\tcx={x1Value}\n\t\t\t\t\tcy={y1Value}\n\t\t\t\t\tr={r}\n\t\t\t\t\tfill={edgeFill}\n\t\t\t\t\tstroke={anchor === \"edge1\" ? stroke : edgeStroke}\n\t\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\t\tstrokeOpacity={1}\n\t\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\n\t\t\t\t\tonDragStart={this.handleEdge1DragStart}\n\t\t\t\t\tonDrag={this.handleEdge1Drag}\n\t\t\t\t\tonDragComplete={this.handleDragComplete}\n\t\t\t\t/>\n\t\t\t\t<ClickableCircle\n\t\t\t\t\tref={this.saveNodeType(\"edge2\")}\n\t\t\t\t\tshow={selected || hover}\n\t\t\t\t\tcx={x2Value}\n\t\t\t\t\tcy={y2Value}\n\t\t\t\t\tr={r}\n\t\t\t\t\tfill={edgeFill}\n\t\t\t\t\tstroke={anchor === \"edge2\" ? stroke : edgeStroke}\n\t\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\t\tstrokeOpacity={1}\n\t\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\n\t\t\t\t\tonDragStart={this.handleEdge2DragStart}\n\t\t\t\t\tonDrag={this.handleEdge2Drag}\n\t\t\t\t\tonDragComplete={this.handleDragComplete}\n\t\t\t\t/>\n\t\t\t\t<Text\n\t\t\t\t\tselected={selected}\n\t\t\t\t\txyProvider={xyProvider}\n\t\t\t\t\tfontFamily={fontFamily}\n\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\tfill={fontFill}\n\t\t\t\t>\n\t\t\t\t\t{Edge1DItem && Edge2DItem\n\t\t\t\t\t\t? percentFormat(\n\t\t\t\t\t\t\t(((y2Value - y1Value) / y2Value)))\n\t\t\t\t\t\t: \"0%\"}\n\t\t\t\t</Text>\n\t\t\t\t<HoverTextNearMouse\n\t\t\t\t\tshow={hoverTextEnabled && hover}\n\t\t\t\t\t{...restHoverTextProps}\n\t\t\t\t\ttext={selected ? hoverTextSelected : hoverTextUnselected}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nexport function getNewXY(moreProps) {\n\tconst {\n\t\txScale,\n\t\tchartConfig: { yScale },\n\t\txAccessor,\n\t\tplotData,\n\t\tmouseXY,\n\t} = moreProps;\n\tconst mouseY = mouseXY[1];\n\n\tconst x = getXValue(xScale, xAccessor, mouseXY, plotData);\n\n\tconst [small, big] = yScale.domain().slice().sort(d3Ascending);\n\tconst y = yScale.invert(mouseY);\n\tconst newY = Math.min(Math.max(y, small), big);\n\n\treturn [x, newY];\n}\n\nfunction helper({ x1, y1, x2, y2 }) {\n\tconst dy = y2 - y1;\n\tconst retracements = [100, 61.8, 50, 38.2, 23.6, 0].map((each) => ({\n\t\tpercent: each,\n\t\tx1,\n\t\tx2,\n\t\ty: y2 - (each / 100) * dy,\n\t}));\n\n\treturn retracements;\n}\n\nEachLinePrecent.propTypes = {\n\tx1Value: PropTypes.any.isRequired,\n\tx2Value: PropTypes.any.isRequired,\n\ty1Value: PropTypes.any.isRequired,\n\ty2Value: PropTypes.any.isRequired,\n\n\tindex: PropTypes.number,\n\tlabel: PropTypes.string.isRequired,\n\n\ttype: PropTypes.oneOf([\"LINE\"]).isRequired,\n\n\tonDrag: PropTypes.func.isRequired,\n\tonEdge1Drag: PropTypes.func.isRequired,\n\tonEdge2Drag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func.isRequired,\n\tonUnSelect: PropTypes.func.isRequired,\n\n\tr: PropTypes.number.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tdefaultClassName: PropTypes.string,\n\n\tselected: PropTypes.bool,\n\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\n\tfontFamily: PropTypes.string.isRequired,\n\tfontSize: PropTypes.number.isRequired,\n\tfontFill: PropTypes.string.isRequired,\n\n\tedgeStrokeWidth: PropTypes.number.isRequired,\n\tedgeStroke: PropTypes.string.isRequired,\n\tedgeInteractiveCursor: PropTypes.string.isRequired,\n\tlineInteractiveCursor: PropTypes.string.isRequired,\n\tedgeFill: PropTypes.string.isRequired,\n\thoverText: PropTypes.object.isRequired,\n};\n\nEachLinePrecent.defaultProps = {\n\tonDrag: noop,\n\tonEdge1Drag: noop,\n\tonEdge2Drag: noop,\n\tonDragComplete: noop,\n\tonSelect: noop,\n\tonUnSelect: noop,\n\n\tselected: false,\n\thovering: false,\n\n\tlabel: \"5555%\",\n\n\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n\tfontSize: 16,\n\tfontFill: \"#000000\",\n\n\tedgeStroke: \"#000000\",\n\tedgeFill: \"#FFFFFF\",\n\tedgeStrokeWidth: 2,\n\tr: 5,\n\tstrokeWidth: 1,\n\tstrokeOpacity: 1,\n\tstrokeDasharray: \"Solid\",\n\thoverText: {\n\t\tenable: false,\n\t},\n};\n\nexport default EachLinePrecent;\n"]}