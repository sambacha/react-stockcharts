{"version":3,"sources":["../../../../src/lib/interactive/wrapper/EachShape.js"],"names":["getNewXY","EachShape","props","handleDragComplete","bind","handleHover","isHover","saveNodeType","nodes","state","hover","setState","anchor","undefined","onDragComplete","moreProps","hovering","stroke","opacity","fill","r","edgeStrokeWidth","edgeFill","edgeStroke","edgeInteractiveCursor","hoverText","selected","figure","position","onDrag","lineInteractiveCursor","width","height","angle","edgeRight","edgeLeft","edgeAngleTop","edgeAngleBottom","id","index","degrees","hoverTextEnabled","enable","hoverTextSelected","selectedText","hoverTextUnselected","text","restHoverTextProps","Component","xScale","yScale","chartConfig","xAccessor","plotData","mouseXY","mouseY","x","domain","slice","sort","d3Ascending","small","big","y","invert","newY","Math","min","max","propTypes","PropTypes","number","func","isRequired","onSelect","onUnSelect","defaultClassName","string","bool","object","defaultProps","noop","onEdge1Drag","onEdge2Drag","strokeWidth","strokeOpacity"],"mappings":"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","file":"EachShape.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\n\nimport { ascending as d3Ascending } from \"d3-array\";\nimport { noop, strokeDashTypes } from \"../../utils\";\nimport { isNotDefined, saveNodeType, isHover } from \"../utils\";\nimport { getXValue } from \"../../utils/ChartDataUtil\";\n\nimport StraightLine, { generateLine } from \"../components/StraightLine\";\nimport AnnotateShape from \"../components/AnnotateShape\";\nimport ClickableCircle from \"../components/ClickableCircle\";\nimport ClickableRect from \"../components/ClickableRect\";\nimport BackgroundHover from \"../components/BackgroundHover\";\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\nimport Transform from \"../components/Transform\";\nimport Text from \"../components/Text\";\n\nclass EachShape extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleDragComplete = this.handleDragComplete.bind(this);\n\n\t\tthis.handleHover = this.handleHover.bind(this);\n\n\t\tthis.isHover = isHover.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.nodes = {};\n\n\t\tthis.state = {\n\t\t\thover: false,\n\t\t};\n\t}\n\n\thandleDragComplete(...rest) {\n\t\tthis.setState({\n\t\t\tanchor: undefined,\n\t\t});\n\t\tthis.props.onDragComplete(...rest);\n\t}\n\thandleHover(moreProps) {\n\t\tif (this.state.hover !== moreProps.hovering) {\n\t\t\tthis.setState({\n\t\t\t\thover: moreProps.hovering,\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\tconst {\n\t\t\tstroke,\n\t\t\topacity,\n\t\t\tfill,\n\t\t\tr,\n\t\t\tedgeStrokeWidth,\n\t\t\tedgeFill,\n\t\t\tedgeStroke,\n\t\t\tedgeInteractiveCursor,\n\t\t\thoverText,\n\t\t\tselected,\n\t\t\tfigure,\n\t\t\tposition,\n\t\t\tonDragComplete,\n\t\t\tonDrag,\n\t\t\tlineInteractiveCursor,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tangle,\n\t\t\tedgeRight,\n\t\t\tedgeLeft,\n\t\t\tedgeAngleTop,\n\t\t\tedgeAngleBottom,\n\t\t\tid,\n\t\t\tindex,\n\t\t\tdegrees,\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\tenable: hoverTextEnabled,\n\t\t\tselectedText: hoverTextSelected,\n\t\t\ttext: hoverTextUnselected,\n\t\t\t...restHoverTextProps\n\t\t} = hoverText;\n\n\t\tconst { hover, anchor } = this.state;\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<Transform\n\t\t\t\t\tfigure={figure}\n\t\t\t\t\tposition={position}\n\t\t\t\t\tstroke={stroke}\n\t\t\t\t\tfill={fill}\n\t\t\t\t\tindex={index}\n\t\t\t\t\topacity={opacity}\n\t\t\t\t\tdegrees={degrees}\n\t\t\t\t\tedgeRight={edgeRight}\n\t\t\t\t\tedgeLeft={edgeLeft}\n\t\t\t\t\tedgeAngleTop={edgeAngleTop}\n\t\t\t\t\tedgeAngleBottom={edgeAngleBottom}\n\t\t\t\t\tselected={selected || hover}\n\t\t\t\t\tr={r}\n\t\t\t\t\tposition={position}\n\t\t\t\t\tfill={fill}\n\t\t\t\t\topacity={opacity}\n\t\t\t\t\twidth={width}\n\t\t\t\t\theight={height}\n\t\t\t\t\tinteractiveCursorClass=\"react-stockcharts-move-cursor\"\n\t\t\t\t\tonDrag={onDrag}\n\t\t\t\t\tonDragComplete={onDragComplete}\n\t\t\t\t/>\n\t\t\t\t<AnnotateShape\n\t\t\t\t\tid={id}\n\t\t\t\t\tref={this.saveNodeType(\"shape\")}\n\t\t\t\t\tselected={selected || hover}\n\t\t\t\t\tfigure={figure}\n\t\t\t\t\tposition={position}\n\t\t\t\t\tstroke={stroke}\n\t\t\t\t\tfill={fill}\n\t\t\t\t\topacity={opacity}\n\t\t\t\t\tdegrees={degrees}\n\t\t\t\t\twidth={width}\n\t\t\t\t\theight={height}\n\t\t\t\t\tonHover={this.handleHover}\n\t\t\t\t\tonUnHover={this.handleHover}\n\t\t\t\t\tinteractiveCursorClass=\"react-stockcharts-move-cursor\"\n\t\t\t\t/>\n\t\t\t\t<HoverTextNearMouse\n\t\t\t\t\tshow={hoverTextEnabled && hover}\n\t\t\t\t\t{...restHoverTextProps}\n\t\t\t\t\ttext={selected ? hoverTextSelected : hoverTextUnselected}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nexport function getNewXY(moreProps) {\n\tconst {\n\t\txScale,\n\t\tchartConfig: { yScale },\n\t\txAccessor,\n\t\tplotData,\n\t\tmouseXY,\n\t} = moreProps;\n\tconst mouseY = mouseXY[1];\n\n\tconst x = getXValue(xScale, xAccessor, mouseXY, plotData);\n\n\tconst [small, big] = yScale.domain().slice().sort(d3Ascending);\n\tconst y = yScale.invert(mouseY);\n\tconst newY = Math.min(Math.max(y, small), big);\n\n\treturn [x, newY];\n}\n\nEachShape.propTypes = {\n\tindex: PropTypes.number,\n\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func.isRequired,\n\tonUnSelect: PropTypes.func.isRequired,\n\n\tr: PropTypes.number.isRequired,\n\tdefaultClassName: PropTypes.string,\n\n\tselected: PropTypes.bool,\n\n\tstroke: PropTypes.string.isRequired,\n\tfill: PropTypes.string.isRequired,\n\n\tedgeStrokeWidth: PropTypes.number.isRequired,\n\tedgeStroke: PropTypes.string.isRequired,\n\tedgeInteractiveCursor: PropTypes.string.isRequired,\n\tedgeFill: PropTypes.string.isRequired,\n\thoverText: PropTypes.object.isRequired,\n\tlineInteractiveCursor: PropTypes.string.isRequired,\n};\n\nEachShape.defaultProps = {\n\tonDrag: noop,\n\tonEdge1Drag: noop,\n\tonEdge2Drag: noop,\n\tonDragComplete: noop,\n\tonSelect: noop,\n\tonUnSelect: noop,\n\n\tselected: false,\n\tfill: \"#FFFFFF\",\n\tstroke: \"#000000\",\n\tedgeStroke: \"#000000\",\n\tedgeFill: \"#FFFFFF\",\n\tedgeStrokeWidth: 2,\n\tr: 5,\n\tstrokeWidth: 1,\n\tstrokeOpacity: 1,\n\thoverText: {\n\t\tenable: false,\n\t},\n};\n\nexport default EachShape;\n"]}