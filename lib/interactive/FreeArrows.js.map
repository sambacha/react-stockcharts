{"version":3,"sources":["../../../src/lib/interactive/FreeArrows.js"],"names":["FreeArrows","props","handleStart","bind","handleEnd","handleDrawLine","handleDragLine","handleDragLineComplete","terminate","saveNodeType","getSelectionState","getHoverInteractive","state","nodes","index","newXYValue","setState","override","moreProps","arrows","newArrows","map","each","idx","start","x1Value","y1Value","end","x2Value","y2Value","selected","onComplete","xyValue","current","mouseMoved","e","onStart","appearance","type","d","hovering","arrow","isHover","enabled","snap","shouldDisableSnap","snapTo","currentPositionRadius","currentPositionStroke","currentPositionstrokeOpacity","currentPositionStrokeWidth","hoverText","tempLine","getAppearance","stroke","strokeWidth","strokeOpacity","eachAppearance","hoverTextWithDefault","defaultProps","strokeDasharray","edgeStroke","edgeFill","edgeStrokeWidth","r","Component","open","close","propTypes","PropTypes","bool","isRequired","func","onSelect","onDoubleClick","string","number","oneOf","object","array","shape","strokeDashTypes","noop","button","shiftKey","HoverTextNearMouse","enable","bgHeight","bgWidth","text","selectedText"],"mappings":"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","file":"FreeArrows.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { isDefined, isNotDefined, noop, strokeDashTypes } from \"../utils\";\n\nimport {\n\tgetValueFromOverride,\n\tterminate,\n\tsaveNodeType,\n\tisHoverForInteractiveType,\n} from \"./utils\";\n\nimport EachFreeArrows from \"./wrapper/EachFreeArrows\";\nimport Arrows from \"./components/Arrows\";\nimport MouseLocationIndicator from \"./components/MouseLocationIndicator\";\nimport HoverTextNearMouse from \"./components/HoverTextNearMouse\";\n\nclass FreeArrows extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleStart = this.handleStart.bind(this);\n\t\tthis.handleEnd = this.handleEnd.bind(this);\n\t\tthis.handleDrawLine = this.handleDrawLine.bind(this);\n\t\tthis.handleDragLine = this.handleDragLine.bind(this);\n\t\tthis.handleDragLineComplete = this.handleDragLineComplete.bind(this);\n\n\t\tthis.terminate = terminate.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\n\t\tthis.getSelectionState = isHoverForInteractiveType(\"arrows\").bind(this);\n\t\tthis.getHoverInteractive = this.getHoverInteractive.bind(this);\n\n\t\tthis.state = {};\n\t\tthis.nodes = [];\n\t}\n\thandleDragLine(index, newXYValue) {\n\t\tthis.setState({\n\t\t\toverride: {\n\t\t\t\tindex,\n\t\t\t\t...newXYValue,\n\t\t\t},\n\t\t});\n\t}\n\thandleDragLineComplete(moreProps) {\n\t\tconst { override } = this.state;\n\t\tif (isDefined(override)) {\n\t\t\tconst { arrows } = this.props;\n\t\t\tconst newArrows = arrows.map((each, idx) =>\n\t\t\t\tidx === override.index\n\t\t\t\t\t? {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tstart: [override.x1Value, override.y1Value],\n\t\t\t\t\t\tend: [override.x2Value, override.y2Value],\n\t\t\t\t\t\tselected: true,\n\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tselected: false,\n\t\t\t\t\t}\n\t\t\t);\n\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\toverride: null,\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.props.onComplete(newArrows, moreProps);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\thandleDrawLine(xyValue) {\n\t\tconst { current } = this.state;\n\t\tif (isDefined(current) && isDefined(current.start)) {\n\t\t\tthis.mouseMoved = true;\n\t\t\tthis.setState({\n\t\t\t\tcurrent: {\n\t\t\t\t\tstart: current.start,\n\t\t\t\t\tend: xyValue,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\thandleStart(xyValue, moreProps, e) {\n\t\tconst { current } = this.state;\n\n\t\tif (isNotDefined(current) || isNotDefined(current.start)) {\n\t\t\tthis.mouseMoved = false;\n\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tcurrent: {\n\t\t\t\t\t\tstart: xyValue,\n\t\t\t\t\t\tend: null,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.props.onStart(moreProps, e);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\thandleEnd(xyValue, moreProps, e) {\n\t\tconst { current } = this.state;\n\t\tconst { arrows, appearance, type } = this.props;\n\t\tif (this.mouseMoved && isDefined(current) && isDefined(current.start)) {\n\n\t\t\tconst newArrows = [\n\t\t\t\t...arrows.map((d) => ({ ...d, selected: false })),\n\t\t\t\t{\n\t\t\t\t\tstart: current.start,\n\t\t\t\t\tend: xyValue,\n\t\t\t\t\tselected: true,\n\t\t\t\t\tappearance,\n\t\t\t\t\ttype,\n\t\t\t\t},\n\t\t\t];\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tcurrent: null,\n\t\t\t\t\tarrows: newArrows,\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.props.onComplete(newArrows, moreProps, e);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\tgetHoverInteractive(hovering, arrow) {\n\t\tarrow.hovering = hovering;\n\t\tconst { isHover } = this.props;\n\t\tisHover(hovering, arrow);\n\t}\n\n\trender() {\n\t\tconst { appearance } = this.props;\n\t\tconst { enabled, snap, shouldDisableSnap, snapTo, type } = this.props;\n\t\tconst { currentPositionRadius, currentPositionStroke } = this.props;\n\t\tconst {\n\t\t\tcurrentPositionstrokeOpacity,\n\t\t\tcurrentPositionStrokeWidth,\n\t\t} = this.props;\n\t\tconst { hoverText, arrows } = this.props;\n\t\tconst { current, override } = this.state;\n\n\t\tconst tempLine =\n            isDefined(current) && isDefined(current.end) ? (\n            \t<Arrows\n            \t\ttype={type}\n            \t\tnoHover\n            \t\tx1Value={current.start[0]}\n            \t\ty1Value={current.start[1]}\n            \t\tx2Value={current.end[0]}\n            \t\ty2Value={current.end[1]}\n            \t\tstroke={getAppearance(type, appearance).stroke}\n            \t\tstrokeWidth={getAppearance(type, appearance).strokeWidth}\n            \t\tstrokeOpacity={getAppearance(type, appearance).strokeOpacity}\n            \t/>\n            ) : null;\n\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t{arrows.map((each, idx) => {\n\t\t\t\t\tconst eachAppearance = isDefined(each.appearance)\n\t\t\t\t\t\t? { ...appearance, ...each.appearance }\n\t\t\t\t\t\t: appearance;\n\n\t\t\t\t\tconst hoverTextWithDefault = {\n\t\t\t\t\t\t...FreeArrows.defaultProps.hoverText,\n\t\t\t\t\t\t...hoverText,\n\t\t\t\t\t};\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<EachFreeArrows\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tref={this.saveNodeType(idx)}\n\t\t\t\t\t\t\tindex={idx}\n\t\t\t\t\t\t\ttype={each.type}\n\t\t\t\t\t\t\tselected={each.selected}\n\t\t\t\t\t\t\tx1Value={getValueFromOverride(\n\t\t\t\t\t\t\t\toverride,\n\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\"x1Value\",\n\t\t\t\t\t\t\t\teach.start[0]\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\ty1Value={getValueFromOverride(\n\t\t\t\t\t\t\t\toverride,\n\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\"y1Value\",\n\t\t\t\t\t\t\t\teach.start[1]\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tx2Value={getValueFromOverride(\n\t\t\t\t\t\t\t\toverride,\n\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\"x2Value\",\n\t\t\t\t\t\t\t\teach.end[0]\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\ty2Value={getValueFromOverride(\n\t\t\t\t\t\t\t\toverride,\n\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\"y2Value\",\n\t\t\t\t\t\t\t\teach.end[1]\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tstroke={getAppearance(type, eachAppearance).stroke}\n\t\t\t\t\t\t\tstrokeWidth={\n\t\t\t\t\t\t\t\tgetAppearance(type, eachAppearance).strokeWidth\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstrokeOpacity={\n\t\t\t\t\t\t\t\tgetAppearance(type, eachAppearance)\n\t\t\t\t\t\t\t\t\t.strokeOpacity\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstrokeDasharray={\n\t\t\t\t\t\t\t\tgetAppearance(type, eachAppearance)\n\t\t\t\t\t\t\t\t\t.strokeDasharray\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tedgeStroke={eachAppearance.edgeStroke}\n\t\t\t\t\t\t\tedgeFill={eachAppearance.edgeFill}\n\t\t\t\t\t\t\tedgeStrokeWidth={eachAppearance.edgeStrokeWidth}\n\t\t\t\t\t\t\tr={eachAppearance.r}\n\t\t\t\t\t\t\thoverText={hoverTextWithDefault}\n\t\t\t\t\t\t\tonDrag={this.handleDragLine}\n\t\t\t\t\t\t\tonDragComplete={this.handleDragLineComplete}\n\t\t\t\t\t\t\tedgeInteractiveCursor=\"react-stockcharts-move-cursor\"\n\t\t\t\t\t\t\tlineInteractiveCursor=\"react-stockcharts-move-cursor\"\n\t\t\t\t\t\t\tgetHoverInteractive={hovering => this.getHoverInteractive(hovering, each)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t{tempLine}\n\t\t\t\t<MouseLocationIndicator\n\t\t\t\t\tenabled={enabled}\n\t\t\t\t\tsnap={snap}\n\t\t\t\t\tshouldDisableSnap={shouldDisableSnap}\n\t\t\t\t\tsnapTo={snapTo}\n\t\t\t\t\tr={currentPositionRadius}\n\t\t\t\t\tstroke={currentPositionStroke}\n\t\t\t\t\tstrokeOpacity={currentPositionstrokeOpacity}\n\t\t\t\t\tstrokeWidth={currentPositionStrokeWidth}\n\t\t\t\t\tonMouseDown={this.handleStart}\n\t\t\t\t\tonClick={this.handleEnd}\n\t\t\t\t\tonMouseMove={this.handleDrawLine}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nfunction getAppearance(type, props) {\n\tswitch (type) {\n\t\tcase \"ARROW-OPEN\": {\n\t\t\treturn props.open;\n\t\t}\n\t\tcase \"ARROW-CLOSE\": {\n\t\t\treturn props.close;\n\t\t}\n\t\tcase \"ARROW\": {\n\t\t\treturn props.arrow;\n\t\t}\n\t\tdefault:\n\t\t\treturn props.arrow;\n\t}\n}\n\nFreeArrows.propTypes = {\n\tsnap: PropTypes.bool.isRequired,\n\tenabled: PropTypes.bool.isRequired,\n\tsnapTo: PropTypes.func,\n\tshouldDisableSnap: PropTypes.func.isRequired,\n\n\tonStart: PropTypes.func.isRequired,\n\tonComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func,\n\tonDoubleClick: PropTypes.func,\n\n\tcurrentPositionStroke: PropTypes.string,\n\tcurrentPositionStrokeWidth: PropTypes.number,\n\tcurrentPositionstrokeOpacity: PropTypes.number,\n\tcurrentPositionRadius: PropTypes.number,\n\ttype: PropTypes.oneOf([\n\t\t\"ARROW\", // extends from -Infinity to +Infinity\n\t\t\"ARROW-OPEN\", // extends to +/-Infinity in one direction\n\t\t\"ARROW-CLOSE\", // extends between the set bounds\n\t]),\n\thoverText: PropTypes.object.isRequired,\n\n\tarrows: PropTypes.array.isRequired,\n\n\tappearance: PropTypes.shape({\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\n\t\tedgeFill: PropTypes.string.isRequired,\n\t\tedgeStroke: PropTypes.string.isRequired,\n\t\tarrow: PropTypes.shape({\n\t\t\tstroke: PropTypes.string.isRequired,\n\t\t\tstrokeOpacity: PropTypes.number.isRequired,\n\t\t\tstrokeWidth: PropTypes.number.isRequired,\n\t\t\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\t\t}),\n\t\topen: PropTypes.shape({\n\t\t\tstroke: PropTypes.string.isRequired,\n\t\t\tstrokeOpacity: PropTypes.number.isRequired,\n\t\t\tstrokeWidth: PropTypes.number.isRequired,\n\t\t\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\t\t}),\n\t\tclose: PropTypes.shape({\n\t\t\tstroke: PropTypes.string.isRequired,\n\t\t\tstrokeOpacity: PropTypes.number.isRequired,\n\t\t\tstrokeWidth: PropTypes.number.isRequired,\n\t\t\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\t\t}),\n\t}).isRequired,\n};\n\nFreeArrows.defaultProps = {\n\ttype: \"ARROW\",\n\n\tonStart: noop,\n\tonComplete: noop,\n\tonSelect: noop,\n\n\tcurrentPositionStroke: \"#000000\",\n\tcurrentPositionstrokeOpacity: 1,\n\tcurrentPositionStrokeWidth: 3,\n\tcurrentPositionRadius: 0,\n\n\tshouldDisableSnap: (e) => e.button === 2 || e.shiftKey,\n\thoverText: {\n\t\t...HoverTextNearMouse.defaultProps,\n\t\tenable: true,\n\t\tbgHeight: \"auto\",\n\t\tbgWidth: \"auto\",\n\t\ttext: \"Click to select object\",\n\t\tselectedText: \"\",\n\t},\n\tarrows: [],\n\n\tappearance: {\n\t\tarrow: {\n\t\t\tstroke: \"#000000\",\n\t\t\tstrokeOpacity: 1,\n\t\t\tstrokeWidth: 4,\n\t\t\tstrokeDasharray: \"Solid\",\n\t\t},\n\t\tedgeStrokeWidth: 1,\n\t\tedgeFill: \"#FFFFFF\",\n\t\tedgeStroke: \"#000000\",\n\t\tr: 6,\n\n\t\topen: {\n\t\t\tstroke: \"green\",\n\t\t\tstrokeOpacity: 1,\n\t\t\tstrokeWidth: 4,\n\t\t\tstrokeDasharray: \"Solid\",\n\t\t},\n\t\tclose: {\n\t\t\tstroke: \"red\",\n\t\t\tstrokeOpacity: 1,\n\t\t\tstrokeWidth: 4,\n\t\t\tstrokeDasharray: \"Solid\",\n\t\t},\n\t},\n};\n\nexport default FreeArrows;\n"]}