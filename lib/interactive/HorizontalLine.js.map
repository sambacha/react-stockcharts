{"version":3,"sources":["../../../src/lib/interactive/HorizontalLine.js"],"names":["HorizontalLine","props","handleEnd","bind","handleDragLine","handleDragLineComplete","terminate","saveNodeType","getSelectionState","getHoverInteractive","state","nodes","index","newXYValue","otherProps","setState","override","moreProps","trends","newTrends","map","each","idx","start","x1Value","y1Value","end","x2Value","y2Value","selected","onComplete","xyValue","e","appearance","type","d","current","hovering","horizontalLine","isHover","enabled","snap","shouldDisableSnap","snapTo","currentPositionRadius","currentPositionStroke","currentPositionstrokeOpacity","currentPositionStrokeWidth","hoverText","tempLine","stroke","strokeWidth","strokeOpacity","eachAppearance","hoverTextWithDefault","defaultProps","strokeDasharray","edgeStroke","edgeFill","edgeStrokeWidth","r","Component","propTypes","PropTypes","bool","isRequired","func","onStart","onSelect","onDoubleClick","string","number","oneOf","object","array","noop","button","shiftKey","HoverTextNearMouse","enable","bgHeight","bgWidth","text","selectedText"],"mappings":"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","file":"HorizontalLine.js","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { isDefined, isNotDefined, noop, strokeDashTypes } from \"../utils\";\n\nimport {\n\tgetValueFromOverride,\n\tterminate,\n\tsaveNodeType,\n\tisHoverForInteractiveType,\n} from \"./utils\";\n\nimport EachHorizontalLine from \"./wrapper/EachHorizontalLine\";\nimport StraightLine from \"./components/StraightLine\";\nimport MouseLocationIndicator from \"./components/MouseLocationIndicator\";\nimport HoverTextNearMouse from \"./components/HoverTextNearMouse\";\n\nclass HorizontalLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleEnd = this.handleEnd.bind(this);\n\t\tthis.handleDragLine = this.handleDragLine.bind(this);\n\t\tthis.handleDragLineComplete = this.handleDragLineComplete.bind(this);\n\n\t\tthis.terminate = terminate.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\n\t\tthis.getSelectionState = isHoverForInteractiveType(\"trends\")\n\t\t\t.bind(this);\n\t\tthis.getHoverInteractive = this.getHoverInteractive.bind(this);\n\n\t\tthis.state = {};\n\t\tthis.nodes = [];\n\t}\n\thandleDragLine(index, newXYValue, otherProps) {\n\t\tthis.setState({\n\t\t\toverride: {\n\t\t\t\t...otherProps,\n\t\t\t\tindex,\n\t\t\t\t...newXYValue\n\t\t\t}\n\t\t});\n\t}\n\thandleDragLineComplete(moreProps) {\n\t\tconst { override } = this.state;\n\t\tif (isDefined(override)) {\n\t\t\tconst { trends } = this.props;\n\t\t\tconst newTrends = trends\n\t\t\t\t.map((each, idx) => idx === override.index\n\t\t\t\t\t? {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tstart: [override.x1Value, override.y1Value],\n\t\t\t\t\t\tend: [override.x2Value, override.y2Value],\n\t\t\t\t\t\tselected: true,\n\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tselected: false,\n\t\t\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\toverride: null,\n\t\t\t}, () => {\n\t\t\t\tthis.props.onComplete(newTrends, moreProps);\n\t\t\t});\n\t\t}\n\t}\n\t// handleDrawLine(xyValue) {\n\t// \tconst { current } = this.state;\n\t// \tif (isDefined(current) && isDefined(current.start)) {\n\t// \t\tthis.mouseMoved = true;\n\t// \t\tthis.setState({\n\t// \t\t\tcurrent: {\n\t// \t\t\t\tstart: current.start,\n\t// \t\t\t\tend: xyValue,\n\t// \t\t\t}\n\t// \t\t});\n\t// \t}\n\t// }\n\t// handleStart(xyValue, moreProps, e) {\n\t// \tconst { current } = this.state;\n\n\t// \tif (isNotDefined(current) || isNotDefined(current.start)) {\n\t// \t\tthis.mouseMoved = false;\n\n\t// \t\tthis.setState({\n\t// \t\t\tcurrent: {\n\t// \t\t\t\tstart: xyValue,\n\t// \t\t\t\tend: null,\n\t// \t\t\t},\n\t// \t\t}, () => {\n\t// \t\t\tthis.props.onStart(moreProps, e);\n\t// \t\t});\n\t// \t}\n\t// }\n\thandleEnd(xyValue, moreProps, e) {\n\t\tconst { trends, appearance, type } = this.props;\n\n\t\tconst newTrends = [\n\t\t\t...trends.map(d => ({ ...d, selected: false })),\n\t\t\t{\n\t\t\t\tstart: [xyValue[0], xyValue[1]],\n\t\t\t\tend: [xyValue[0] + 1, xyValue[1]],\n\t\t\t\tselected: true,\n\t\t\t\tappearance,\n\t\t\t\ttype,\n\t\t\t}\n\t\t];\n\t\tthis.setState({\n\t\t\tcurrent: null,\n\t\t\ttrends: newTrends\n\t\t}, () => {\n\t\t\tthis.props.onComplete(newTrends, moreProps, e);\n\t\t});\n\t}\n\n\tgetHoverInteractive(hovering, horizontalLine) {\n\t\thorizontalLine.hovering = hovering;\n\t\tconst { isHover } = this.props;\n\t\tisHover(hovering, horizontalLine);\n\t}\n\n\trender() {\n\t\tconst { appearance } = this.props;\n\t\tconst { enabled, snap, shouldDisableSnap, snapTo, type } = this.props;\n\t\tconst { currentPositionRadius, currentPositionStroke } = this.props;\n\t\tconst { currentPositionstrokeOpacity, currentPositionStrokeWidth } = this.props;\n\t\tconst { hoverText, trends } = this.props;\n\t\tconst { current, override } = this.state;\n\t\tconst tempLine = isDefined(current) && isDefined(current.end)\n\t\t\t? <StraightLine\n\t\t\t\ttype={type}\n\t\t\t\tnoHover\n\t\t\t\tx1Value={current.start[0]}\n\t\t\t\ty1Value={current.start[1]}\n\t\t\t\tx2Value={current.end !== null ? current.end[0] : 0}\n\t\t\t\ty2Value={current.end !== null ? current.end[1] : 0}\n\t\t\t\tstroke={appearance.stroke}\n\t\t\t\tstrokeWidth={appearance.strokeWidth}\n\t\t\t\tstrokeOpacity={appearance.strokeOpacity}\n\t\t\t\tcurrent={current}\n\t\t\t />\n\t\t\t: null;\n\t\treturn <g>\n\t\t\t{trends.map((each, idx) => {\n\t\t\t\tconst eachAppearance = isDefined(each.appearance)\n\t\t\t\t\t? { ...appearance, ...each.appearance }\n\t\t\t\t\t: appearance;\n\n\t\t\t\tconst hoverTextWithDefault = {\n\t\t\t\t\t...HorizontalLine.defaultProps.hoverText,\n\t\t\t\t\t...hoverText\n\t\t\t\t};\n\t\t\t\treturn <EachHorizontalLine\n\t\t\t\t\tkey={idx}\n\t\t\t\t\tref={this.saveNodeType(idx)}\n\t\t\t\t\tindex={idx}\n\t\t\t\t\ttype={each.type}\n\t\t\t\t\tselected={each.selected}\n\t\t\t\t\tx1Value={getValueFromOverride(override, idx, \"x1Value\", each.start[0])}\n\t\t\t\t\ty1Value={getValueFromOverride(override, idx, \"y1Value\", each.start[1])}\n\t\t\t\t\tx2Value={getValueFromOverride(override, idx, \"x2Value\", each.end[0])}\n\t\t\t\t\ty2Value={getValueFromOverride(override, idx, \"y2Value\", each.end[1])}\n\t\t\t\t\tstroke={eachAppearance.stroke}\n\t\t\t\t\tstrokeWidth={eachAppearance.strokeWidth}\n\t\t\t\t\tstrokeOpacity={eachAppearance.strokeOpacity}\n\t\t\t\t\tstrokeDasharray={eachAppearance.strokeDasharray}\n\t\t\t\t\tedgeStroke={eachAppearance.edgeStroke}\n\t\t\t\t\tedgeFill={eachAppearance.edgeFill}\n\t\t\t\t\tedgeStrokeWidth={eachAppearance.edgeStrokeWidth}\n\t\t\t\t\tr={eachAppearance.r}\n\t\t\t\t\thoverText={hoverTextWithDefault}\n\t\t\t\t\tonDrag={this.handleDragLine}\n\t\t\t\t\tonDragComplete={this.handleDragLineComplete}\n\t\t\t\t\tedgeInteractiveCursor=\"react-stockcharts-move-cursor\"\n\t\t\t\t\tlineInteractiveCursor=\"react-stockcharts-move-cursor\"\n\t\t\t\t\tgetHoverInteractive={hovering => this.getHoverInteractive(hovering, each)}\n\t\t\t\t/>;\n\t\t\t})}\n\t\t\t{tempLine}\n\t\t\t<MouseLocationIndicator\n\t\t\t\tenabled={enabled}\n\t\t\t\tsnap={snap}\n\t\t\t\tshouldDisableSnap={shouldDisableSnap}\n\t\t\t\tsnapTo={snapTo}\n\t\t\t\tr={currentPositionRadius}\n\t\t\t\tstroke={currentPositionStroke}\n\t\t\t\tstrokeOpacity={currentPositionstrokeOpacity}\n\t\t\t\tstrokeWidth={currentPositionStrokeWidth}\n\t\t\t\t// onMouseDown={this.handleStart}\n\t\t\t\tonClick={this.handleEnd}\n\t\t\t\t// onMouseMove={this.handleDrawLine}\n\t\t\t/>\n\t\t</g>;\n\t}\n}\n\n\nHorizontalLine.propTypes = {\n\tsnap: PropTypes.bool.isRequired,\n\tenabled: PropTypes.bool.isRequired,\n\tsnapTo: PropTypes.func,\n\tshouldDisableSnap: PropTypes.func.isRequired,\n\n\tonStart: PropTypes.func.isRequired,\n\tonComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func,\n\tonDoubleClick: PropTypes.func,\n\n\tcurrentPositionStroke: PropTypes.string,\n\tcurrentPositionStrokeWidth: PropTypes.number,\n\tcurrentPositionstrokeOpacity: PropTypes.number,\n\tcurrentPositionRadius: PropTypes.number,\n\ttype: PropTypes.oneOf([\n\t\t\"horizontal\"\n\t]),\n\thoverText: PropTypes.object.isRequired,\n\n\ttrends: PropTypes.array.isRequired,\n};\n\nHorizontalLine.defaultProps = {\n\ttype: \"horizontal\",\n\n\tonComplete: noop,\n\t// onStart: noop,\n\t// onSelect: noop,\n\n\tcurrentPositionStroke: \"#000000\",\n\tcurrentPositionstrokeOpacity: 1,\n\tcurrentPositionStrokeWidth: 3,\n\tcurrentPositionRadius: 0,\n\n\tshouldDisableSnap: e => (e.button === 2 || e.shiftKey),\n\thoverText: {\n\t\t...HoverTextNearMouse.defaultProps,\n\t\tenable: true,\n\t\tbgHeight: \"auto\",\n\t\tbgWidth: \"auto\",\n\t\ttext: \"Click to select object\",\n\t\tselectedText: \"\",\n\t},\n\ttrends: [],\n\n\tappearance: {\n\t\tstroke: \"#000000\",\n\t\tstrokeOpacity: 1,\n\t\tstrokeWidth: 1,\n\t\tstrokeDasharray: \"Solid\",\n\t\tedgeStrokeWidth: 1,\n\t\tedgeFill: \"#FFFFFF\",\n\t\tedgeStroke: \"#000000\",\n\t\tr: 6,\n\t}\n};\n\nexport default HorizontalLine;\n"]}