{"version":3,"sources":["../../../src/lib/tooltip/ADXTooltip.js"],"names":["ADXTooltip","props","renderSVG","bind","moreProps","onClick","fontFamily","fontSize","yAccessor","displayFormat","className","options","labelFill","textFill","appearance","stroke","displayValuesFor","chartConfig","width","height","currentItem","adx","plusDI","minusDI","adxVal","adxValue","originProp","origin","x","y","tooltipLabel","windowSize","plusDILabel","minusDILabel","ALine","dLine","kLine","Component","propTypes","PropTypes","oneOfType","array","func","isRequired","shape","number","string","defaultProps"],"mappings":"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","file":"ADXTooltip.js","sourcesContent":["\n\nimport { format } from \"d3-format\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport displayValuesFor from \"./displayValuesFor\";\nimport GenericChartComponent from \"../GenericChartComponent\";\n\nimport { isDefined, functor } from \"../utils\";\nimport ToolTipText from \"./ToolTipText\";\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\n\nclass ADXTooltip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { onClick, fontFamily, fontSize, yAccessor, displayFormat, className } = this.props;\n\t\tconst { options, labelFill, textFill, appearance } = this.props;\n\t\tconst { stroke } = appearance;\n\t\tconst { displayValuesFor } = this.props;\n\t\tconst { chartConfig: { width, height } } = moreProps;\n\n\t\tconst currentItem = displayValuesFor(this.props, moreProps);\n\t\tconst adx = isDefined(currentItem) && yAccessor(currentItem);\n\t\tconst plusDI = (adx && displayFormat(adx.plusDI)) || \"n/a\";\n\t\tconst minusDI = (adx && displayFormat(adx.minusDI)) || \"n/a\";\n\t\tconst adxVal = (adx && displayFormat(adx.adxValue)) || \"n/a\";\n\n\t\tconst { origin: originProp } = this.props;\n\t\tconst origin = functor(originProp);\n\t\tconst [x, y] = origin(width, height);\n\n\t\tconst tooltipLabel = `ADX (${options.windowSize}): `;\n\t\tconst plusDILabel = `DIP (${options.windowSize}): `;\n\t\tconst minusDILabel = `DIM (${options.windowSize}): `;\n\n\t\treturn (\n\t\t\t<g className={className} transform={`translate(${x}, ${y})`} onClick={onClick}>\n\t\t\t\t<ToolTipText x={0} y={0}\n\t\t\t\t\tfontFamily={fontFamily} fontSize={fontSize}>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{tooltipLabel}</ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={stroke.ALine}>{`${adxVal} `}</tspan>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{plusDILabel}</ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={stroke.dLine}>{`${plusDI} `}</tspan>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{minusDILabel}</ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={stroke.kLine}>{`${minusDI} `}</tspan>\n\t\t\t\t</ToolTipText>\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tdrawOn={[\"mousemove\"]}\n\t\t/>;\n\t}\n}\n\nADXTooltip.propTypes = {\n\torigin: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.func\n\t]).isRequired,\n\toptions: PropTypes.shape({\n\t\twindowSize: PropTypes.number.isRequired,\n\t}).isRequired,\n\tappearance: PropTypes.shape({\n\t\tstroke: {\n\t\t\tALine: PropTypes.string.isRequired,\n\t\t\tdLine: PropTypes.string.isRequired,\n\t\t\tkLine: PropTypes.string.isRequired,\n\t\t}.isRequired,\n\t}).isRequired,\n\tclassName: PropTypes.string,\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n\tonClick: PropTypes.func,\n\tyAccessor: PropTypes.func.isRequired,\n\tdisplayFormat: PropTypes.func.isRequired,\n\tdisplayValuesFor: PropTypes.func,\n\ttextFill: PropTypes.string,\n\tlabelFill: PropTypes.string,\n};\n\nADXTooltip.defaultProps = {\n\tdisplayFormat: format(\".2f\"),\n\tdisplayValuesFor: displayValuesFor,\n\torigin: [0, 0],\n\tclassName: \"react-stockcharts-tooltip\",\n};\n\nexport default ADXTooltip;"]}